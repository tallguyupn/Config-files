{"input":{"location":{"$mid":1,"external":"vscode-userdata:/home/lauri/.vscode-oss/extensions/extensions.json","path":"/home/lauri/.vscode-oss/extensions/extensions.json","scheme":"vscode-userdata"},"mtime":1731075938777,"profile":true,"profileScanOptions":{"bailOutWhenFileNotFound":true},"type":1,"excludeObsolete":true,"validate":true,"productVersion":"1.95.2","productDate":"2024-11-10T08:05:32.953Z","productCommit":"7656a0bea17ba6cf301721572e10c9035bb378e6","devMode":false,"language":"en","translations":{}},"result":[{"type":1,"identifier":{"id":"formulahendry.code-runner","uuid":"a6a0c5b2-d078-4bf5-a9ee-4e37054414b3"},"manifest":{"name":"code-runner","displayName":"Code Runner","description":"Run C, C++, Java, JS, PHP, Python, Perl, Ruby, Go, Lua, Groovy, PowerShell, CMD, BASH, F#, C#, VBScript, TypeScript, CoffeeScript, Scala, Swift, Julia, Crystal, OCaml, R, AppleScript, Elixir, VB.NET, Clojure, Haxe, Obj-C, Rust, Racket, Scheme, AutoHotkey, AutoIt, Kotlin, Dart, Pascal, Haskell, Nim, D, Lisp, Kit, V, SCSS, Sass, CUDA, Less, Fortran, Ring, Standard ML, Zig, Mojo, Erlang, SPWN, Pkl, Gleam","version":"0.12.2","featureFlags":{"usingNewPythonInterpreterPathApi":true,"usingNewPythonInterpreterPathApiV2":true},"publisher":"formulahendry","icon":"images/logo.png","engines":{"vscode":"^1.56.0"},"categories":["Programming Languages","Other"],"keywords":["javascript","php","python","perl","ruby","multi-root ready"],"bugs":{"url":"https://github.com/formulahendry/vscode-code-runner/issues","email":"formulahendry@gmail.com"},"homepage":"https://github.com/formulahendry/vscode-code-runner/blob/master/README.md","repository":{"type":"git","url":"https://github.com/formulahendry/vscode-code-runner.git"},"sponsor":{"url":"https://www.patreon.com/junhan"},"activationEvents":["onCommand:code-runner.run","onCommand:code-runner.runCustomCommand","onCommand:code-runner.runByLanguage","onStartupFinished"],"main":"./out/src/extension","contributes":{"commands":[{"command":"code-runner.run","title":"Run Code","icon":"$(play)"},{"command":"code-runner.runCustomCommand","title":"Run Custom Command"},{"command":"code-runner.runByLanguage","title":"Run By Language"},{"command":"code-runner.stop","title":"Stop Code Run","icon":"$(debug-stop)"}],"keybindings":[{"command":"code-runner.run","key":"ctrl+alt+n"},{"command":"code-runner.runCustomCommand","key":"ctrl+alt+k"},{"command":"code-runner.runByLanguage","key":"ctrl+alt+j"},{"command":"code-runner.stop","key":"ctrl+alt+m"}],"menus":{"editor/context":[{"when":"!inOutput && config.code-runner.showRunCommandInEditorContextMenu","command":"code-runner.run","group":"navigation"},{"when":"inOutput && !config.code-runner.runInTerminal","command":"code-runner.stop","group":"stop-code-run"}],"editor/title/run":[{"when":"config.code-runner.showRunIconInEditorTitleMenu","command":"code-runner.run","group":"navigation"}],"editor/title":[{"when":"config.code-runner.showStopIconInEditorTitleMenu && code-runner.codeRunning","command":"code-runner.stop","group":"navigation"}],"explorer/context":[{"when":"!explorerResourceIsFolder && config.code-runner.showRunCommandInExplorerContextMenu","command":"code-runner.run","group":"navigation"}]},"configuration":{"type":"object","title":"Run Code configuration","properties":{"code-runner.executorMapByGlob":{"type":"object","default":{"pom.xml":"cd $dir && mvn clean package"},"description":"Set the executor by glob.","scope":"resource"},"code-runner.executorMap":{"type":"object","default":{"javascript":"node","java":"cd $dir && javac $fileName && java $fileNameWithoutExt","c":"cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","zig":"zig run","cpp":"cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","objective-c":"cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","php":"php","python":"python -u","perl":"perl","perl6":"perl6","ruby":"ruby","go":"go run","lua":"lua","groovy":"groovy","powershell":"powershell -ExecutionPolicy ByPass -File","bat":"cmd /c","shellscript":"bash","fsharp":"fsi","csharp":"scriptcs","vbscript":"cscript //Nologo","typescript":"ts-node","coffeescript":"coffee","scala":"scala","swift":"swift","julia":"julia","crystal":"crystal","ocaml":"ocaml","r":"Rscript","applescript":"osascript","clojure":"lein exec","haxe":"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt","rust":"cd $dir && rustc $fileName && $dir$fileNameWithoutExt","racket":"racket","scheme":"csi -script","ahk":"autohotkey","autoit":"autoit3","dart":"dart","pascal":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt","d":"cd $dir && dmd $fileName && $dir$fileNameWithoutExt","haskell":"runghc","nim":"nim compile --verbosity:0 --hints:off --run","lisp":"sbcl --script","kit":"kitc --run","v":"v run","sass":"sass --style expanded","scss":"scss --style expanded","less":"cd $dir && lessc $fileName $fileNameWithoutExt.css","FortranFreeForm":"cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","fortran-modern":"cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","fortran_fixed-form":"cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","fortran":"cd $dir && gfortran $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","sml":"cd $dir && sml $fileName","mojo":"mojo run","erlang":"escript","spwn":"spwn build","pkl":"cd $dir && pkl eval -f yaml $fileName -o $fileNameWithoutExt.yaml","gleam":"gleam run -m $fileNameWithoutExt"},"description":"Set the executor of each language.","scope":"resource"},"code-runner.executorMapByFileExtension":{"type":"object","default":{".vb":"cd $dir && vbc /nologo $fileName && $dir$fileNameWithoutExt",".vbs":"cscript //Nologo",".scala":"scala",".jl":"julia",".cr":"crystal",".ml":"ocaml",".zig":"zig run",".exs":"elixir",".hx":"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",".rkt":"racket",".scm":"csi -script",".ahk":"autohotkey",".au3":"autoit3",".kt":"cd $dir && kotlinc $fileName -include-runtime -d $fileNameWithoutExt.jar && java -jar $fileNameWithoutExt.jar",".kts":"kotlinc -script",".dart":"dart",".pas":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt",".pp":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt",".d":"cd $dir && dmd $fileName && $dir$fileNameWithoutExt",".hs":"runhaskell",".nim":"nim compile --verbosity:0 --hints:off --run",".csproj":"dotnet run --project",".fsproj":"dotnet run --project",".lisp":"sbcl --script",".kit":"kitc --run",".v":"v run",".vsh":"v run",".sass":"sass --style expanded",".cu":"cd $dir && nvcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt",".ring":"ring",".sml":"cd $dir && sml $fileName",".mojo":"mojo run",".erl":"escript",".spwn":"spwn build",".pkl":"cd $dir && pkl eval -f yaml $fileName -o $fileNameWithoutExt.yaml",".gleam":"gleam run -m $fileNameWithoutExt"},"description":"Set the executor of each file extension.","scope":"resource"},"code-runner.customCommand":{"type":"string","default":"echo Hello","description":"Set the custom command to run.","scope":"resource"},"code-runner.languageIdToFileExtensionMap":{"type":"object","default":{"bat":".bat","powershell":".ps1","typescript":".ts"},"description":"Set the mapping of languageId to file extension.","scope":"resource"},"code-runner.defaultLanguage":{"type":"string","default":"","description":"Set the default language to run.","scope":"resource"},"code-runner.cwd":{"type":"string","default":"","description":"Set the working directory.","scope":"resource"},"code-runner.fileDirectoryAsCwd":{"type":"boolean","default":false,"description":"Whether to use the directory of the file to be executed as the working directory.","scope":"resource"},"code-runner.clearPreviousOutput":{"type":"boolean","default":false,"description":"Whether to clear previous output before each run.","scope":"resource"},"code-runner.saveAllFilesBeforeRun":{"type":"boolean","default":false,"description":"Whether to save all files before running.","scope":"resource"},"code-runner.saveFileBeforeRun":{"type":"boolean","default":false,"description":"Whether to save the current file before running.","scope":"resource"},"code-runner.enableAppInsights":{"type":"boolean","default":true,"description":"Whether to enable AppInsights to track user telemetry data.","scope":"resource"},"code-runner.showExecutionMessage":{"type":"boolean","default":true,"description":"Whether to show extra execution message like [Running] ... and [Done] ...","scope":"resource"},"code-runner.runInTerminal":{"type":"boolean","default":false,"description":"Whether to run code in Integrated Terminal.","scope":"resource"},"code-runner.terminalRoot":{"type":"string","default":"","description":"For Windows system, replaces the Windows style drive letter in the command with a Unix style root when using a custom shell as the terminal, like Bash or Cgywin. Example: Setting this to '/mnt/' will replace 'C:\\path' with '/mnt/c/path'","scope":"resource"},"code-runner.preserveFocus":{"type":"boolean","default":true,"description":"Whether to preserve focus on code editor after code run is triggered.","scope":"resource"},"code-runner.ignoreSelection":{"type":"boolean","default":false,"description":"Whether to ignore selection to always run entire file.","scope":"resource"},"code-runner.showRunIconInEditorTitleMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' icon in editor title menu.","scope":"resource"},"code-runner.showStopIconInEditorTitleMenu":{"type":"boolean","default":true,"description":"Whether to show 'Stop code run' icon in the editor title menu when code is running.","scope":"resource"},"code-runner.showRunCommandInEditorContextMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' command in editor context menu.","scope":"resource"},"code-runner.showRunCommandInExplorerContextMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' command in explorer context menu.","scope":"resource"},"code-runner.temporaryFileName":{"type":"string","default":"tempCodeRunnerFile","description":"Temporary file name used in running selected code snippet. When it is set as empty, the file name will be random.","scope":"resource"},"code-runner.respectShebang":{"type":"boolean","default":true,"description":"Whether to respect Shebang to run code.","scope":"resource"}}},"languages":[{"id":"code-runner-output","mimetypes":["text/x-code-output"]}],"grammars":[{"language":"code-runner-output","scopeName":"code-runner.output","path":"./syntaxes/code-runner-output.tmLanguage"}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","tslint":"tslint -t verbose src/**/*.ts"},"dependencies":{"applicationinsights":"^0.19.0","micromatch":"^4.0.2","tree-kill":"^1.2.2"},"devDependencies":{"@types/micromatch":"^3.1.0","@types/mocha":"^2.2.32","@types/node":"^6.0.40","@types/vscode":"^1.56.0","mocha":"^6.1.4","tslint":"^5.5.0","typescript":"^3.8.3"}},"location":{"$mid":1,"path":"/home/lauri/.vscode-oss/extensions/formulahendry.code-runner-0.12.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"formulahendry","metadata":{"installedTimestamp":1730585127290,"pinned":false,"source":"gallery","id":"a6a0c5b2-d078-4bf5-a9ee-4e37054414b3","publisherId":"38bbe3f0-5204-4170-845e-c2f966d979b8","publisherDisplayName":"formulahendry","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vscodevim.vim","uuid":"d96e79c6-8b25-4be3-8545-0e0ecefcae03"},"manifest":{"name":"vim","displayName":"Vim","description":"Vim emulation for Visual Studio Code","icon":"images/icon.png","version":"1.28.1","publisher":"vscodevim","galleryBanner":{"color":"#e3f4ff","theme":"light"},"license":"MIT","keywords":["vim","vi","vscodevim"],"repository":{"type":"git","url":"https://github.com/VSCodeVim/Vim.git"},"homepage":"https://github.com/VSCodeVim/Vim","bugs":{"url":"https://github.com/VSCodeVim/Vim/issues"},"engines":{"vscode":"^1.74.0"},"categories":["Other","Keymaps"],"extensionKind":["ui"],"sideEffects":false,"activationEvents":["onStartupFinished","onCommand:type"],"qna":"https://vscodevim.herokuapp.com/","main":"./out/extension","browser":"./out/extensionWeb","capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"contributes":{"commands":[{"command":"toggleVim","title":"Vim: Toggle Vim Mode"},{"command":"vim.showQuickpickCmdLine","title":"Vim: Show Command Line"},{"command":"vim.editVimrc","enablement":"!isWeb","title":"Vim: Edit .vimrc"}],"keybindings":[{"key":"Escape","command":"extension.vim_escape","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Escape","command":"notebook.cell.quitEdit","when":"inputFocus && notebookEditorFocused && !editorHasSelection && !editorHoverVisible && vim.active && vim.mode == 'Normal'"},{"key":"Home","command":"extension.vim_home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+home","command":"extension.vim_ctrl+home","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"End","command":"extension.vim_end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"ctrl+end","command":"extension.vim_ctrl+end","when":"editorTextFocus && vim.active && !inDebugRepl && vim.mode != 'Insert'"},{"key":"Insert","command":"extension.vim_insert","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Backspace","command":"extension.vim_backspace","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"Delete","command":"extension.vim_delete","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"tab","command":"extension.vim_tab","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+tab","command":"extension.vim_shift+tab","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"left","command":"extension.vim_left","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"right","command":"extension.vim_right","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"up","command":"extension.vim_up","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"down","command":"extension.vim_down","when":"editorTextFocus && vim.active && !inDebugRepl && !suggestWidgetVisible && !parameterHintsVisible"},{"key":"g g","command":"list.focusFirst","when":"listFocus && !inputFocus"},{"key":"h","command":"list.collapse","when":"listFocus && !inputFocus"},{"key":"j","command":"list.focusDown","when":"listFocus && !inputFocus"},{"key":"k","command":"list.focusUp","when":"listFocus && !inputFocus"},{"key":"l","command":"list.select","when":"listFocus && !inputFocus"},{"key":"o","command":"list.toggleExpand","when":"listFocus && !inputFocus"},{"key":"/","command":"list.toggleKeyboardNavigation","when":"listFocus && !inputFocus && listSupportsKeyboardNavigation"},{"key":"ctrl+a","command":"extension.vim_ctrl+a","when":"editorTextFocus && vim.active && vim.use<C-a> && !inDebugRepl"},{"key":"ctrl+b","command":"extension.vim_ctrl+b","when":"editorTextFocus && vim.active && vim.use<C-b> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+c","command":"extension.vim_ctrl+c","when":"editorTextFocus && vim.active && vim.use<C-c> && !inDebugRepl && vim.overrideCtrlC"},{"key":"ctrl+d","command":"extension.vim_ctrl+d","when":"editorTextFocus && vim.active && vim.use<C-d> && !inDebugRepl"},{"key":"ctrl+d","command":"list.focusPageDown","when":"listFocus && !inputFocus"},{"key":"ctrl+e","command":"extension.vim_ctrl+e","when":"editorTextFocus && vim.active && vim.use<C-e> && !inDebugRepl"},{"key":"ctrl+f","command":"extension.vim_ctrl+f","when":"editorTextFocus && vim.active && vim.use<C-f> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+g","command":"extension.vim_ctrl+g","when":"editorTextFocus && vim.active && vim.use<C-g> && !inDebugRepl"},{"key":"ctrl+h","command":"extension.vim_ctrl+h","when":"editorTextFocus && vim.active && vim.use<C-h> && !inDebugRepl"},{"key":"ctrl+i","command":"extension.vim_ctrl+i","when":"editorTextFocus && vim.active && vim.use<C-i> && !inDebugRepl"},{"key":"ctrl+j","command":"extension.vim_ctrl+j","when":"editorTextFocus && vim.active && vim.use<C-j> && !inDebugRepl"},{"key":"ctrl+k","command":"extension.vim_ctrl+k","when":"editorTextFocus && vim.active && vim.use<C-k> && !inDebugRepl"},{"key":"ctrl+l","command":"extension.vim_navigateCtrlL","when":"editorTextFocus && vim.active && vim.use<C-l> && !inDebugRepl"},{"key":"ctrl+m","command":"extension.vim_ctrl+m","when":"editorTextFocus && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-m> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-m> && !inDebugRepl"},{"key":"ctrl+n","command":"extension.vim_ctrl+n","when":"editorTextFocus && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-n> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-n> && !inDebugRepl"},{"key":"ctrl+o","command":"extension.vim_ctrl+o","when":"editorTextFocus && vim.active && vim.use<C-o> && !inDebugRepl"},{"key":"ctrl+p","command":"extension.vim_ctrl+p","when":"editorTextFocus && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'CommandlineInProgress' && vim.active && vim.use<C-p> && !inDebugRepl || vim.mode == 'SearchInProgressMode' && vim.active && vim.use<C-p> && !inDebugRepl"},{"key":"ctrl+q","command":"extension.vim_winCtrlQ","when":"editorTextFocus && vim.active && vim.use<C-q> && !inDebugRepl"},{"key":"ctrl+r","command":"extension.vim_ctrl+r","when":"editorTextFocus && vim.active && vim.use<C-r> && !inDebugRepl"},{"key":"ctrl+s","command":"extension.vim_ctrl+s","when":"editorTextFocus && vim.active && vim.use<C-s> && !inDebugRepl"},{"key":"ctrl+t","command":"extension.vim_ctrl+t","when":"editorTextFocus && vim.active && vim.use<C-t> && !inDebugRepl"},{"key":"ctrl+u","command":"extension.vim_ctrl+u","when":"editorTextFocus && vim.active && vim.use<C-u> && !inDebugRepl"},{"key":"ctrl+u","command":"list.focusPageUp","when":"listFocus && !inputFocus"},{"key":"ctrl+v","command":"extension.vim_ctrl+v","when":"editorTextFocus && vim.active && vim.use<C-v> && !inDebugRepl"},{"key":"ctrl+w","command":"extension.vim_ctrl+w","when":"editorTextFocus && vim.active && vim.use<C-w> && !inDebugRepl"},{"key":"ctrl+x","command":"extension.vim_ctrl+x","when":"editorTextFocus && vim.active && vim.use<C-x> && !inDebugRepl"},{"key":"ctrl+y","command":"extension.vim_ctrl+y","when":"editorTextFocus && vim.active && vim.use<C-y> && !inDebugRepl"},{"key":"ctrl+z","command":"extension.vim_ctrl+z","when":"editorTextFocus && vim.active && vim.use<C-z> && !inDebugRepl"},{"key":"ctrl+6","command":"extension.vim_ctrl+6","when":"editorTextFocus && vim.active && vim.use<C-6> && !inDebugRepl"},{"key":"ctrl+^","command":"extension.vim_ctrl+^","when":"editorTextFocus && vim.active && vim.use<C-^> && !inDebugRepl"},{"key":"ctrl+[","command":"extension.vim_ctrl+[","when":"editorTextFocus && vim.active && vim.use<C-[> && !inDebugRepl"},{"key":"ctrl+]","command":"extension.vim_ctrl+]","when":"editorTextFocus && vim.active && vim.use<C-]> && !inDebugRepl"},{"key":"ctrl+shift+2","command":"extension.vim_ctrl+shift+2","when":"editorTextFocus && vim.active && vim.use<C-shift+2>"},{"key":"ctrl+up","command":"extension.vim_ctrl+up","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+down","command":"extension.vim_ctrl+down","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+left","command":"extension.vim_ctrl+left","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+right","command":"extension.vim_ctrl+right","when":"editorTextFocus && vim.active && vim.mode != 'Insert' && !inDebugRepl"},{"key":"ctrl+pagedown","command":"extension.vim_ctrl+pagedown","when":"editorTextFocus && vim.active && vim.use<C-pagedown> && !inDebugRepl"},{"key":"ctrl+pageup","command":"extension.vim_ctrl+pageup","when":"editorTextFocus && vim.active && vim.use<C-pageup> && !inDebugRepl"},{"key":"ctrl+space","command":"extension.vim_ctrl+space","when":"editorTextFocus && vim.active && vim.use<C-space> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"shift+G","command":"list.focusLast","when":"listFocus && !inputFocus"},{"key":"ctrl+backspace","command":"extension.vim_ctrl+backspace","when":"editorTextFocus && vim.active && vim.use<C-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"shift+backspace","command":"extension.vim_shift+backspace","when":"editorTextFocus && vim.active && vim.use<S-BS> && vim.mode != 'Insert' && !inDebugRepl"},{"key":"cmd+left","command":"extension.vim_cmd+left","when":"editorTextFocus && vim.active && vim.use<D-left> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+right","command":"extension.vim_cmd+right","when":"editorTextFocus && vim.active && vim.use<D-right> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+a","command":"extension.vim_cmd+a","when":"editorTextFocus && vim.active && vim.use<D-a> && !inDebugRepl && vim.mode != 'Insert'"},{"key":"cmd+c","command":"extension.vim_cmd+c","when":"editorTextFocus && vim.active && vim.use<D-c> && vim.overrideCopy && !inDebugRepl"},{"key":"cmd+d","command":"extension.vim_cmd+d","when":"editorTextFocus && vim.active && vim.use<D-d> && !inDebugRepl"},{"key":"cmd+v","command":"extension.vim_cmd+v","when":"editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'CommandlineInProgress' && !inDebugRepl || editorTextFocus && vim.active && vim.use<D-v> && vim.mode == 'SearchInProgressMode' && !inDebugRepl"},{"key":"ctrl+alt+down","linux":"shift+alt+down","mac":"cmd+alt+down","command":"extension.vim_cmd+alt+down","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"ctrl+alt+up","linux":"shift+alt+up","mac":"cmd+alt+up","command":"extension.vim_cmd+alt+up","when":"editorTextFocus && vim.active && !inDebugRepl"},{"key":"j","command":"notebook.focusNextEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'none' && notebookEditorCursorAtBoundary != 'top'"},{"key":"k","command":"notebook.focusPreviousEditor","when":"vim.mode == 'Normal' && editorTextFocus && inputFocus && notebookEditorFocused && notebookEditorCursorAtBoundary != 'bottom' && notebookEditorCursorAtBoundary != 'none'"}],"configuration":{"title":"Vim","type":"object","properties":{"vim.normalModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.normalModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in Normal mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.operatorPendingModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive remapped keys in OperatorPending mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.useCtrlKeys":{"type":"boolean","markdownDescription":"Enable some Vim Ctrl key commands that override otherwise common operations, like `Ctrl+C`.","default":true},"vim.leader":{"type":"string","markdownDescription":"What key should `<leader>` map to in remappings?","default":"\\"},"vim.searchHighlightColor":{"type":"string","markdownDescription":"Background color of non-current search matches. The color must not be opaque so as not to hide underlying decorations. Uses `#editor.findMatchHighlightColor#` from current theme if undefined."},"vim.searchHighlightTextColor":{"type":"string","markdownDescription":"Foreground color of non-current search matches."},"vim.searchMatchColor":{"type":"string","markdownDescription":"Background color of the current match. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.searchMatchTextColor":{"type":"string","markdownDescription":"Foreground color of the current match."},"vim.substitutionColor":{"type":"string","markdownDescription":"Background color of substituted text when `#editor.inccommand#` is enabled. Uses `#editor.findMatchColor#` from current theme if undefined."},"vim.substitutionTextColor":{"type":"string","markdownDescription":"Foreground color of substituted text when `#editor.inccommand#` is enabled."},"vim.highlightedyank.enable":{"type":"boolean","description":"Enable highlighting when yanking.","default":false},"vim.highlightedyank.color":{"type":"string","description":"Background color of yanked text. The color must not be opaque so as not to hide underlying decorations.","default":"rgba(250, 240, 170, 0.5)"},"vim.highlightedyank.textColor":{"type":"string","description":"Foreground color of yanked text."},"vim.highlightedyank.duration":{"type":"number","description":"Duration in milliseconds of the yank highlight.","default":200,"minimum":1},"vim.useSystemClipboard":{"type":"boolean","description":"Use system clipboard for unnamed register.","default":false},"vim.overrideCopy":{"type":"boolean","description":"Override VS Code's copy command with our own copy command, which works better with VSCodeVim. Turn this off if copying is not working.","default":true},"vim.insertModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.insertModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Insert mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.visualModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for Visual mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindings":{"type":"array","markdownDescription":"Remapped keys in command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.commandLineModeKeyBindingsNonRecursive":{"type":"array","markdownDescription":"Non-recursive keybinding overrides to use for command line mode. Allows mapping to Vim commands or VS Code actions. See [README](https://github.com/VSCodeVim/Vim/#key-remapping) for details.","scope":"application"},"vim.textwidth":{"type":"number","markdownDescription":"Width to word-wrap to when using `gq`.","default":80,"scope":"language-overridable","minimum":1},"vim.timeout":{"type":"number","description":"Timeout in milliseconds for remapped commands.","default":1000,"minimum":0},"vim.maxmapdepth":{"type":"number","description":"Maximum number of times a mapping is done without resulting in a character to be used.","default":1000,"minimum":0},"vim.scroll":{"type":"number","markdownDescription":"Number of lines to scroll with `Ctrl-U` and `Ctrl-D` commands. Set to 0 to use a half page scroll.","default":0,"minimum":0},"vim.showcmd":{"type":"boolean","description":"Show the text of any command you are in the middle of writing.","default":true},"vim.showmodename":{"type":"boolean","description":"Show the name of the current mode in the statusbar.","default":true},"vim.iskeyword":{"type":"string","markdownDescription":"Keywords contain alphanumeric characters and '_'. If not configured, `#editor.wordSeparators#` is used."},"vim.ignorecase":{"type":"boolean","description":"Ignore case in search patterns.","default":true},"vim.smartcase":{"type":"boolean","markdownDescription":"Override the `ignorecase` option if the search pattern contains upper case characters.","default":true},"vim.matchpairs":{"type":"string","markdownDescription":"Characters that form pairs. The % command jumps from one to the other. Only character pairs are allowed that are different, thus you cannot jump between two double quotes. The characters must be separated by a colon. The pairs must be separated by a comma.","default":"(:),{:},[:]","pattern":"^(.:.)?(,.:.)*$"},"vim.camelCaseMotion.enable":{"type":"boolean","markdownDescription":"Enable the [CamelCaseMotion](https://github.com/bkad/CamelCaseMotion) plugin for Vim.","default":false},"vim.easymotion":{"type":"boolean","markdownDescription":"Enable the [EasyMotion](https://github.com/easymotion/vim-easymotion) plugin for Vim.","default":false},"vim.easymotionMarkerBackgroundColor":{"type":"string","default":"#0000","description":"Set a custom background color for EasyMotion markers."},"vim.easymotionMarkerForegroundColorOneChar":{"type":"string","default":"#ff0000","description":"Set a custom color for the text on one character long markers."},"vim.easymotionMarkerForegroundColorTwoCharFirst":{"type":"string","default":"#ffb400","description":"Set a custom color for the first character on two character long markers."},"vim.easymotionMarkerForegroundColorTwoCharSecond":{"type":"string","default":"#b98300","description":"Set a custom color for the second character on two character long markers."},"vim.easymotionIncSearchForegroundColor":{"type":"string","default":"#7fbf00","markdownDescription":"Set a custom color for the easymotion search n-character (default `<leader><leader>/`)."},"vim.easymotionDimColor":{"type":"string","default":"#777777","markdownDescription":"Set a custom color for the easymotion dimmed characters when `#vim.easymotionDimBackground#` is set to true."},"vim.easymotionDimBackground":{"type":"boolean","description":"Whether to dim other text while markers are visible.","default":true},"vim.easymotionMarkerFontWeight":{"type":"string","description":"Set the font weight of the marker text.","default":"bold"},"vim.easymotionKeys":{"type":"string","description":"Set the characters used for jump marker name.","default":"hklyuiopnm,qwertzxcvbasdgjf;"},"vim.easymotionJumpToAnywhereRegex":{"type":"string","description":"Regex matches for JumpToAnywhere motion.","default":"\\b[A-Za-z0-9]|[A-Za-z0-9]\\b|_.|#.|[a-z][A-Z]"},"vim.replaceWithRegister":{"type":"boolean","markdownDescription":"Enable the [ReplaceWithRegister](https://github.com/vim-scripts/ReplaceWithRegister) plugin for Vim.","default":false},"vim.smartRelativeLine":{"type":"boolean","markdownDescription":"`#editor.lineNumbers#` is determined by the active Vim mode, absolute when in insert mode, relative otherwise.","default":false},"vim.targets.enable":{"type":"boolean","markdownDescription":"Enable [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects) plugin (not fully implemented yet).","default":false},"vim.targets.bracketObjects.enable":{"type":"boolean","markdownDescription":"Enable last/next movements for bracket objects.","default":true},"vim.targets.smartQuotes.enable":{"type":"boolean","markdownDescription":"Enable the smart quotes movements from [targets.vim](https://github.com/wellle/targets.vim#quote-text-objects).","default":true},"vim.targets.smartQuotes.breakThroughLines":{"type":"boolean","markdownDescription":"Whether to break through lines when using [n]ext/[l]ast motion, see [targets.vim#next-and-last-quote](https://github.com/wellle/targets.vim#next-and-last-quote).","default":true},"vim.targets.smartQuotes.aIncludesSurroundingSpaces":{"type":"boolean","markdownDescription":"Whether to use default Vim behavior when using `a` (e.g. `da'`) which include surrounding spaces, or not, as for other text objects.","default":true},"vim.sneak":{"type":"boolean","markdownDescription":"Enable the [Sneak](https://github.com/justinmk/vim-sneak) plugin for Vim.","default":false},"vim.sneakUseIgnorecaseAndSmartcase":{"type":"boolean","markdownDescription":"Case sensitivity is determined by `#vim.ignorecase#` and `#vim.smartcase#`.","default":false},"vim.sneakReplacesF":{"type":"boolean","markdownDescription":"Use single-character [Sneak](https://github.com/justinmk/vim-sneak) instead of Vim's native `f`.","default":false},"vim.surround":{"type":"boolean","markdownDescription":"Enable the [Surround](https://github.com/tpope/vim-surround) plugin for Vim.","default":true},"vim.argumentObjectSeparators":{"type":"array","items":{"type":"string"},"markdownDescription":"Set separators for the argument text object.","default":[","]},"vim.argumentObjectOpeningDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set opening delimiters for the argument text object.","default":["(","["]},"vim.argumentObjectClosingDelimiters":{"type":"array","items":{"type":"string"},"markdownDescription":"Set closing delimiters for the argument text object.","default":[")","]"]},"vim.hlsearch":{"type":"boolean","description":"Show all matches of the most recent search pattern.","default":false},"vim.inccommand":{"type":"string","markdownDescription":"Show the effects of the `:substitute` command as you type.","default":"replace","enum":["","append","replace"],"enumDescriptions":["Don't show substitutions","Show substitutions after matched text","Replace matched text with substitutions"]},"vim.incsearch":{"type":"boolean","markdownDescription":"Show where a `/` or `?` search matches as you type it.","default":true},"vim.history":{"type":"number","description":"How much search or command history should be remembered.","default":50,"minimum":1,"maximum":10000},"vim.autoindent":{"type":"boolean","description":"Indent code automatically.","default":true},"vim.joinspaces":{"type":"boolean","description":"Add two spaces after '.', '?', and '!' when joining or reformatting.","default":true},"vim.startInInsertMode":{"type":"boolean","description":"Start in Insert mode."},"vim.handleKeys":{"type":"object","description":"Delegate certain key combinations back to VS Code to be handled natively.","default":{"<C-d>":true,"<C-s>":false,"<C-z>":false}},"vim.statusBarColorControl":{"type":"boolean","markdownDescription":"Allow VSCodeVim to change status bar color based on mode. **NOTE:** Using this feature will have a negative impact on performance.","default":false},"vim.statusBarColors.normal":{"type":["string","array"],"description":"Status bar color when in Normal mode.","default":["#005f5f","#ffffff"]},"vim.statusBarColors.insert":{"type":["string","array"],"description":"Status bar color when in Insert mode.","default":["#5f0000","#ffffff"]},"vim.statusBarColors.visual":{"type":["string","array"],"description":"Status bar color when in Visual mode.","default":["#5f00af","#ffffff"]},"vim.statusBarColors.visualline":{"type":["string","array"],"description":"Status bar color when in VisualLine mode.","default":["#005f87","#ffffff"]},"vim.statusBarColors.visualblock":{"type":["string","array"],"description":"Status bar color when in VisualBlock mode.","default":["#86592d","#ffffff"]},"vim.statusBarColors.replace":{"type":["string","array"],"description":"Status bar color when in Replace mode.","default":["#00000","#ffffff"]},"vim.statusBarColors.commandlineinprogress":{"type":["string","array"],"description":"Status bar color when in CommandLineInProgress mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.searchinprogressmode":{"type":["string","array"],"description":"Status bar color when in SearchInProgress mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.easymotionmode":{"type":["string","array"],"description":"Status bar color when in EasyMotion mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.easymotioninputmode":{"type":["string","array"],"description":"Status bar color when in EasyMotionInput mode.","default":["#007acc","#ffffff"]},"vim.statusBarColors.surroundinputmode":{"type":["string","array"],"description":"Status bar color when in SurroundInput mode.","default":["#007acc","#ffffff"]},"vim.visualstar":{"type":"boolean","markdownDescription":"In Visual mode, start a search with `*` or `#` using the current selection.","default":false},"vim.changeWordIncludesWhitespace":{"type":"boolean","description":"Includes trailing whitespace when changing word.","default":false},"vim.foldfix":{"type":"boolean","description":"Uses a hack to move around folds properly.","default":false},"vim.mouseSelectionGoesIntoVisualMode":{"type":"boolean","description":"If enabled, dragging with the mouse activates Visual mode.","default":true},"vim.disableExtension":{"type":"boolean","description":"Disables the VSCodeVim extension. The extension will continue to be loaded and activated, but Vim functionality will be disabled.","default":false},"vim.enableNeovim":{"type":"boolean","markdownDescription":"Use Neovim to execute Ex commands. You should restart VS Code after enabling/disabling this for the changes to take effect. **NOTE:** Neovim version 0.2.0 or greater must be installed, and if the executable is not on your PATH, `#vim.neovimPath#` must be set.","default":false},"vim.neovimPath":{"type":"string","markdownDescription":"Path to Neovim executable. For example, `/usr/bin/nvim`, or  `C:\\Program Files\\Neovim\\bin\\nvim.exe`.","default":"","scope":"machine"},"vim.neovimUseConfigFile":{"type":"boolean","markdownDescription":"Use a config file for Neovim, specified by `#vim.neovimConfigPath#`.","default":false},"vim.neovimConfigPath":{"type":"string","markdownDescription":"Path to Neovim configuration file. `#vim.neovimUseConfigFile#` must be enabled. If path is left blank, Neovim will use its default config path, i.e. `~/.config/nvim/init.vim` or 'C:\\Users\\USERNAME\\AppData\\Local\\nvim\\init.vim'.","default":"","scope":"machine"},"vim.vimrc.enable":{"type":"boolean","markdownDescription":"Use key mappings from a `.vimrc` file.","default":false},"vim.vimrc.path":{"type":"string","markdownDescription":"Path to a Vim configuration file. If unset, it will check for `$HOME/.vscodevimrc`, `$HOME/.vimrc`, `$HOME/_vimrc`, and `$HOME/.config/nvim/init.vim`, in that order."},"vim.substituteGlobalFlag":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false,"markdownDeprecationMessage":"**Deprecated**: Please use `#vim.gdefault#` instead.","deprecationMessage":"Deprecated: Please use vim.gdefault instead."},"vim.gdefault":{"type":"boolean","markdownDescription":"Automatically apply the global flag, `/g`, to substitute commands. When set to true, use `/g` to mean only first match should be replaced.","default":false},"vim.cursorStylePerMode.normal":{"type":"string","description":"Cursor style for Normal mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.insert":{"type":"string","description":"Cursor style for Insert mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.replace":{"type":"string","description":"Cursor style for Replace mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visual":{"type":"string","description":"Cursor style for Visual mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualline":{"type":"string","description":"Cursor style for VisualLine mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.cursorStylePerMode.visualblock":{"type":"string","description":"Cursor style for VisualBlock mode.","enum":["","block","block-outline","line","line-thin","underline","underline-thin"]},"vim.autoSwitchInputMethod.enable":{"type":"boolean","description":"If enabled, the input method switches automatically when the mode changes.","default":false},"vim.autoSwitchInputMethod.defaultIM":{"type":"string","markdownDescription":"The input method for your normal mode, find more information [here](https://github.com/VSCodeVim/Vim#input-method).","default":"","scope":"machine"},"vim.autoSwitchInputMethod.switchIMCmd":{"type":"string","description":"The shell command to switch input method.","default":"/path/to/im-select {im}","scope":"machine"},"vim.autoSwitchInputMethod.obtainIMCmd":{"type":"string","description":"The shell command to get current input method.","default":"/path/to/im-select","scope":"machine"},"vim.whichwrap":{"type":"string","description":"Comma-separated list of motion keys that should wrap to next/previous line.","default":"b,s"},"vim.report":{"type":"number","description":"Threshold for reporting number of lines changed.","default":2,"minimum":1},"vim.digraphs":{"type":"object","description":"Custom digraph shortcuts for inserting special characters, expressed as UTF16 code points.","default":{}},"vim.wrapscan":{"type":"boolean","description":"Searches wrap around the end of the file.","default":true},"vim.startofline":{"type":"boolean","markdownDescription":"When `true` the commands listed below move the cursor to the first non-blank of the line.  When `false` the cursor is kept in the same column (if possible).  This applies to the commands: `<C-d>`, `<C-u>`, `<C-b>`, `<C-f>`, `G`, `H`, `M`, `L`, `gg`, and to the commands `d`, `<<` and `>>` with a linewise operator.","default":true},"vim.showMarksInGutter":{"type":"boolean","description":"Show the currently set mark(s) in the gutter.","default":false},"vim.shell":{"type":"string","description":"Path to the shell to use for `!` and `:!` commands.","default":""}}},"languages":[{"id":"Vimscript","extensions":[".vim",".vimrc"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"Vimscript","scopeName":"source.vimscript","path":"./syntaxes/vimscript.tmLanguage.json"}]},"scripts":{"vscode:prepublish":"gulp build","build":"gulp build","build-dev":"gulp build-dev","build-test":"gulp prepare-test","test":"node ./out/test/runTest.js","lint":"eslint .","lint:fix":"eslint . --fix","prettier":"prettier --write .","prettier:check":"prettier --check .","watch":"webpack -c webpack.dev.js --watch","package":"yarn run vsce package --yarn --allow-star-activation","prepare":"husky"},"dependencies":{"diff-match-patch":"1.0.5","lodash":"^4.17.21","neovim":"5.2.0","os-browserify":"0.3.0","parsimmon":"^1.18.0","path-browserify":"1.0.1","process":"0.11.10","queue":"^6.0.2","untildify":"4.0.0","util":"0.12.5"},"devDependencies":{"@types/diff":"5.2.2","@types/diff-match-patch":"1.0.36","@types/glob":"8.1.0","@types/lodash":"4.17.7","@types/mocha":"10.0.7","@types/node":"20.16.5","@types/parsimmon":"1.10.9","@types/sinon":"17.0.3","@types/vscode":"1.74.0","@typescript-eslint/eslint-plugin":"^8.0.0","@typescript-eslint/parser":"^8.0.0","@vscode/test-electron":"2.4.1","circular-dependency-plugin":"^5.2.2","clean-webpack-plugin":"4.0.0","eslint":"^8.52.0","eslint-config-prettier":"^9.0.0","eslint-plugin-jsdoc":"^50.0.0","eslint-plugin-prefer-arrow":"^1.2.3","event-stream":"4.0.1","fork-ts-checker-webpack-plugin":"9.0.2","gulp":"5.0.0","gulp-bump":"3.2.0","gulp-git":"2.11.0","gulp-tag-version":"1.3.1","gulp-typescript":"5.0.1","husky":"^9.0.0","lint-staged":"^15.0.0","minimist":"1.2.8","mocha":"10.7.3","plugin-error":"2.0.1","prettier":"3.3.3","sinon":"18.0.0","ts-loader":"9.5.1","typescript":"5.5.4","vsce":"2.15.0","webpack":"5.94.0","webpack-cli":"5.1.4","webpack-merge":"6.0.1","webpack-stream":"7.0.0"},"lint-staged":{"*.{ts,js,json,md,yml}":"prettier --write","*.ts":"eslint --fix"}},"location":{"$mid":1,"path":"/home/lauri/.vscode-oss/extensions/vscodevim.vim-1.28.1-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"vscodevim","metadata":{"installedTimestamp":1730585137807,"pinned":false,"source":"gallery","id":"d96e79c6-8b25-4be3-8545-0e0ecefcae03","publisherId":"5d63889b-1b67-4b1f-8350-4f1dce041a26","publisherDisplayName":"vscodevim","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"catppuccin.catppuccin-vsc","uuid":"69264e4d-cd3b-468a-8f2b-e69673c7d864"},"manifest":{"name":"catppuccin-vsc","license":"MIT","private":true,"displayName":"Catppuccin for VSCode","publisher":"Catppuccin","description":"🦌 Soothing pastel theme for VSCode","version":"3.15.2","type":"module","engines":{"vscode":"^1.80.0","node":">=20.0.0"},"categories":["Themes"],"extensionKind":["ui","workspace"],"activationEvents":["onStartupFinished"],"capabilities":{"untrustedWorkspaces":{"supported":true},"virtualWorkspaces":true},"main":"dist/main.cjs","browser":"dist/browser.cjs","contributes":{"themes":[{"label":"Catppuccin Mocha","uiTheme":"vs-dark","path":"./themes/mocha.json"},{"label":"Catppuccin Macchiato","uiTheme":"vs-dark","path":"./themes/macchiato.json"},{"label":"Catppuccin Frappé","uiTheme":"vs-dark","path":"./themes/frappe.json"},{"label":"Catppuccin Latte","uiTheme":"vs","path":"./themes/latte.json"}],"configuration":{"title":"Catppuccin","properties":{"catppuccin.boldKeywords":{"type":"boolean","default":true,"markdownDescription":"Controls whether to use **bold** for keywords."},"catppuccin.italicComments":{"type":"boolean","default":true,"markdownDescription":"Controls whether to use *italics* for comments."},"catppuccin.italicKeywords":{"type":"boolean","default":true,"markdownDescription":"Controls whether to use *italics* for keywords."},"catppuccin.colorOverrides":{"type":"object","default":{},"markdownDescription":"Custom color overrides. Assign your own hex codes to palette colors. See [the docs](https://github.com/catppuccin/vscode#override-palette-colors) for reference.","$ref":"https://esm.sh/gh/catppuccin/vscode@catppuccin-vsc-v3.15.2/packages/catppuccin-vsc/schemas/colorOverrides.schema.json"},"catppuccin.customUIColors":{"type":"object","default":{},"markdownDescription":"Customize UI colors. Map `workbench.colorCustomizations` to palette colors. See [the docs](https://github.com/catppuccin/vscode#use-palette-colors-on-workbench-elements-ui) for reference.","$ref":"https://esm.sh/gh/catppuccin/vscode@catppuccin-vsc-v3.15.2/packages/catppuccin-vsc/schemas/customUIColors.schema.json"},"catppuccin.accentColor":{"type":"string","default":"mauve","description":"Controls which accent color to use.","enum":["rosewater","flamingo","pink","mauve","red","maroon","peach","yellow","green","teal","sky","sapphire","blue","lavender"]},"catppuccin.workbenchMode":{"type":"string","default":"default","description":"Controls how the workbench should be styled.","enum":["default","flat","minimal"],"enumDescriptions":["The default look, using 3 shades of the base color.","A more flat look, using 2 shades of the base color.","A minimal look, using 1 shade of the base color."]},"catppuccin.bracketMode":{"type":"string","default":"rainbow","description":"Controls how bracket pairs should be themed","enum":["rainbow","dimmed","monochromatic","neovim"],"enumDescriptions":["Uses 6 rainbow colors for matching bracket pairs.","Uses the same 6 rainbow colors as `rainbow`, but has a dimmed appearance.","A monochromatic, grey appearance for matching bracket pairs.","Uses the same bracket pair colors as our neovim port."]},"catppuccin.extraBordersEnabled":{"type":"boolean","default":false,"description":"Controls whether borders should be enabled on some additional UI elements."},"catppuccin.syncWithIconPack":{"type":"boolean","default":true,"markdownDescription":"Controls whether to sync the currently active Catppuccin flavor with the [Catppuccin Icon Pack](https://github.com/catppuccin/vscode-icons)"}}}},"repository":{"type":"git","url":"https://github.com/catppuccin/vscode.git","directory":"packages/catppuccin-vsc"},"bugs":{"url":"https://github.com/catppuccin/vscode/issues"},"sponsor":{"url":"https://opencollective.com/catppuccin"},"icon":"icon.png","devDependencies":{"@actions/core":"^1.10.1","@catppuccin/palette":"^1.1.1","@catppuccin/vsc-typegen":"workspace:*","@tsconfig/node18":"^18.2.4","@types/node":"^20.12.7","@types/tinycolor2":"^1.4.6","@types/vscode":"~1.80.0","@vscode/vsce":"^2.26.0","tinycolor2":"^1.6.0","tsup":"^8.0.2","tsx":"^4.7.2","type-flag":"^3.0.0","typescript":"^5.4.5"},"scripts":{"core:build":"tsx build.ts","core:build-ads":"tsx build.ts --ads","core:dev":"tsx build.ts --dev"},"homepage":"https://github.com/catppuccin/vscode/tree/main/packages/catppuccin-vsc#readme"},"location":{"$mid":1,"path":"/home/lauri/.vscode-oss/extensions/catppuccin.catppuccin-vsc-3.15.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"Catppuccin","metadata":{"installedTimestamp":1730585324043,"pinned":false,"source":"gallery","id":"69264e4d-cd3b-468a-8f2b-e69673c7d864","publisherId":"e7d2ed61-53e0-4dd4-afbe-f536c3bb4316","publisherDisplayName":"Catppuccin","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"pixl-garden.bongocat","uuid":"a1453f60-2804-4cd7-a0d6-cc4299d87cac"},"manifest":{"name":"BongoCat","displayName":"Bongo Cat","description":"Adds a tiny bongo cat to your status bar 😼","publisher":"pixl-garden","version":"0.0.2","icon":"logo.png","engines":{"vscode":"^1.80.0"},"repository":{"type":"git","url":"git://github.com/kitgore/BongoCat"},"categories":["Other"],"keywords":["bongo cat","bongocat","pet","buddy","cute","cat"],"activationEvents":["*"],"main":"./dist/extension.js","contributes":{"commands":[{"command":"extension.toggleStatusBar","title":"Toggle Bongo Cat"}],"productIconThemes":[{"id":"bongocat","label":"Bongo Cat Icons","path":"./bongocat-theme.json"}],"icons":{"bg-leftup":{"description":"bg left up","default":{"fontPath":"./theme/icomoon.woff","fontCharacter":"\\62"}},"bg-leftdown":{"description":"pg left down","default":{"fontPath":"./theme/icomoon.woff","fontCharacter":"\\61"}},"bg-rightup":{"description":"bg right up","default":{"fontPath":"./theme/icomoon.woff","fontCharacter":"\\61"}},"bg-rightdown":{"description":"bg","default":{"fontPath":"./theme/icomoon.woff","fontCharacter":"\\61"}}}},"scripts":{"vscode:prepublish":"npm run package","compile":"webpack","watch":"webpack --watch","package":"webpack --mode production --devtool hidden-source-map","compile-tests":"tsc -p . --outDir out","watch-tests":"tsc -p . -w --outDir out","pretest":"npm run compile-tests && npm run compile && npm run lint","lint":"eslint src --ext ts","test":"node ./out/test/runTest.js"},"devDependencies":{"@types/vscode":"^1.80.0","@types/glob":"^8.1.0","@types/mocha":"^10.0.1","@types/node":"16.x","@typescript-eslint/eslint-plugin":"^5.59.1","@typescript-eslint/parser":"^5.59.1","eslint":"^8.39.0","glob":"^8.1.0","mocha":"^10.2.0","typescript":"^5.0.4","ts-loader":"^9.4.2","webpack":"^5.81.0","webpack-cli":"^5.0.2","@vscode/test-electron":"^2.3.0"}},"location":{"$mid":1,"path":"/home/lauri/.vscode-oss/extensions/pixl-garden.bongocat-0.0.2-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"pixl-garden","metadata":{"installedTimestamp":1730989204926,"pinned":false,"source":"gallery","id":"a1453f60-2804-4cd7-a0d6-cc4299d87cac","publisherId":"420da618-b992-454d-8311-378980cb67fe","publisherDisplayName":"pixl-garden","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"twxs.cmake","uuid":"2be7cf14-2603-402e-9771-fd79df83cdf8"},"manifest":{"name":"cmake","version":"0.0.17","publisher":"twxs","displayName":"CMake","description":"CMake language support for Visual Studio Code","author":{"name":"Nicolas Martin"},"repository":{"type":"git","url":"https://github.com/twxs/vs.language.cmake.git"},"bugs":{"url":"https://github.com/twxs/vs.language.cmake/issues"},"homepage":"https://github.com/twxs/vs.language.cmake/blob/master/README.md","keywords":["CMake","Syntax"],"categories":["Languages","Snippets","Other"],"icon":"images/icon.png","galleryBanner":{"color":"#5c2d91","theme":"dark"},"license":"MIT","activationEvents":["onLanguage:cmake"],"engines":{"vscode":"^1.10.0"},"main":"./out/extension","contributes":{"languages":[{"id":"cmake","extensions":[".cmake"],"filenames":["CMakelists.txt"],"aliases":["CMake"]},{"id":"cmake-cache","filenames":["CMakeCache.txt"],"aliases":["CMake Cache"]}],"commands":[{"command":"cmake.onlineHelp","title":"CMake: Online Help"}],"grammars":[{"language":"cmake","scopeName":"source.cmake","path":"./syntaxes/CMake.tmLanguage"},{"language":"cmake-cache","scopeName":"source.cmakecache","path":"./syntaxes/CMakeCache.tmLanguage"}],"configuration":{"title":"CMake configuration","properties":{"cmake.cmakePath":{"type":"string","default":"cmake","description":"The path to CMake generator executable"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"dependencies":{"opener":"^1.4.2"},"devDependencies":{"typescript":"^2.0.9","vscode":"^1.0.3","@types/node":"^6.0.47","mocha":"^3.1.2","@types/mocha":"^2.2.33"}},"location":{"$mid":1,"path":"/home/lauri/.vscode-oss/extensions/twxs.cmake-0.0.17-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"twxs","metadata":{"installedTimestamp":1731075934865,"pinned":false,"source":"gallery","id":"2be7cf14-2603-402e-9771-fd79df83cdf8","publisherId":"b5ab7991-81a8-4557-af54-4cb8e01e85c1","publisherDisplayName":"twxs","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"franneck94.c-cpp-runner","uuid":"0f4eac03-b4ec-4a55-bce1-deb41fde32ab"},"manifest":{"name":"c-cpp-runner","displayName":"C/C++ Runner","description":"🚀 Compile, run and debug single or multiple C/C++ files with ease. 🚀","version":"9.4.7","publisher":"franneck94","license":"MIT","icon":"icon.png","galleryBanner":{"color":"#9c9c9c","theme":"dark"},"engines":{"vscode":"^1.85.0"},"categories":["Programming Languages","Debuggers","Snippets"],"tags":["c","c++","run","compile","build","debug"],"repository":{"type":"git","url":"https://github.com/franneck94/vscode-c-cpp-runner.git"},"homepage":"https://github.com/franneck94/vscode-c-cpp-runner/README.md","bugs":{"url":"https://github.com/franneck94/vscode-c-cpp-runner/issues"},"activationEvents":["onLanguage:c","onLanguage:cpp","workspaceContains:*.h","workspaceContains:*.c","workspaceContains:*.hh","workspaceContains:*.cc","workspaceContains:*.hxx","workspaceContains:*.cxx","workspaceContains:*.hpp","workspaceContains:*.cpp","workspaceContains:*.cu"],"main":"./dist/main","contributes":{"taskDefinitions":[{"type":"C_Cpp_Runner"}],"commands":[{"command":"C_Cpp_Runner.selectFolder","title":"Select Folder","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.selectMode","title":"Select Mode","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.buildFolder","title":"Build Folder","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.runFolder","title":"Run Folder","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.debugFolder","title":"Debug Folder","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.cleanFolder","title":"Clean Folder","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.folderContextMenu","title":"Select folder from context menu","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.resetLocalSettings","title":"Reset local settings","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.toggleExtensionState","title":"Toggle extension buttons in status bar","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.addCmdArgs","title":"Commandline Arguments","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.buildSingleFile","title":"Build Single File","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.runCurrentSelection","title":"Run Single File","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.debugCurrentSelection","title":"Debug Single File","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.generateAssembler","title":"Generate Assembler Code","when":"C_Cpp_Runner:activatedExtension","category":"C/C++ Runner"},{"command":"C_Cpp_Runner.BuildAndDebugFile","title":"C/C++ Runner: Debug File","category":"C/C++","icon":"$(debug-alt)"},{"command":"C_Cpp_Runner.BuildAndRunFile","title":"C/C++ Runner: Run File","category":"C/C++","icon":"$(run)"}],"keybindings":[{"command":"C_Cpp_Runner.buildFolder","key":"ctrl+k b","mac":"ctrl+k b","when":"C_Cpp_Runner:activatedExtension"},{"command":"C_Cpp_Runner.buildSingleFile","key":"ctrl+alt+b","mac":"ctrl+alt+b","when":"C_Cpp_Runner:activatedExtension"},{"command":"C_Cpp_Runner.runCurrentSelection","key":"ctrl+alt+r","mac":"ctrl+alt+r","when":"C_Cpp_Runner:activatedExtension"},{"command":"C_Cpp_Runner.debugCurrentSelection","key":"ctrl+alt+d","mac":"ctrl+alt+d","when":"C_Cpp_Runner:activatedExtension"},{"command":"C_Cpp_Runner.addCmdArgs","key":"ctrl+alt+a","mac":"ctrl+alt+a","when":"C_Cpp_Runner:activatedExtension"}],"menus":{"explorer/context":[{"command":"C_Cpp_Runner.folderContextMenu","when":"explorerResourceIsFolder","group":"cCppRunnerGroup@1"}],"editor/title/run":[{"command":"C_Cpp_Runner.BuildAndDebugFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/"},{"command":"C_Cpp_Runner.BuildAndRunFile","when":"editorLangId =~ /^(c|(cuda-)?cpp)$/"}]},"configuration":{"type":"object","title":"C/C++ Runner","properties":{"C_Cpp_Runner.enableWarnings":{"type":"boolean","default":true,"description":"Whether to enable checking warnings or not.","scope":"resource"},"C_Cpp_Runner.warnings":{"type":"array","items":{"type":"string"},"default":["-Wall","-Wextra","-Wshadow","-Wpedantic","-Wunused","-Wconversion","-Wformat=2","-Wsign-conversion","-Wnull-dereference"],"description":"Warnings to check by the gcc/clang compiler.","scope":"resource"},"C_Cpp_Runner.msvcWarnings":{"type":"array","items":{"type":"string"},"default":["/W4","/permissive-","/w14242","/w14287","/w14296","/w14311","/w14826","/w44062","/w44242","/w14905","/w14906","/w14263","/w44265","/w14928"],"description":"Warnings to check by the MSVC compiler.","scope":"resource"},"C_Cpp_Runner.warningsAsError":{"type":"boolean","default":false,"description":"Whether to treat warnings as compiler errors or not.","scope":"resource"},"C_Cpp_Runner.cCompilerPath":{"type":"string","default":"gcc","description":"The path to the C Compiler (either gcc or clang).","scope":"resource"},"C_Cpp_Runner.cppCompilerPath":{"type":"string","default":"g++","description":"The path to the C++ Compiler (either g++ or clang++).","scope":"resource"},"C_Cpp_Runner.debuggerPath":{"type":"string","default":"gdb","description":"The path to the debugger (either gdb or lldb).","scope":"resource"},"C_Cpp_Runner.msvcBatchPath":{"type":"string","default":"","description":"The path to the MSVC batch file (e.g. VS2022 Compiler) - Windows only setting.","scope":"resource"},"C_Cpp_Runner.useMsvc":{"type":"boolean","default":false,"description":"Whether to use MSVC compiler or gcc/clang - Windows only setting.","scope":"resource"},"C_Cpp_Runner.cStandard":{"type":"string","enum":["","c89","c99","c11","c17","c23","gnu89","gnu99","gnu11","gnu17","gnu23"],"default":"","description":"C-Standard for the C Compiler.","scope":"resource"},"C_Cpp_Runner.cppStandard":{"type":"string","enum":["","c++98","c++03","c++11","c++14","c++17","c++20","c++23","gnu++98","gnu++03","gnu++11","gnu++14","gnu++17","gnu++20","gnu++23"],"default":"","description":"C++ Standard for the C++ Compiler.","scope":"resource"},"C_Cpp_Runner.compilerArgs":{"type":"array","default":[],"items":{"type":"string"},"description":"Additional compiler arguments.","scope":"resource"},"C_Cpp_Runner.linkerArgs":{"type":"array","default":[],"items":{"type":"string"},"description":"Additional linker arguments.","scope":"resource"},"C_Cpp_Runner.includePaths":{"type":"array","default":[],"items":{"type":"string"},"description":"Additional include paths.","scope":"resource"},"C_Cpp_Runner.includeSearch":{"type":"array","default":["*","**/*"],"items":{"type":"string"},"description":"Include glob patterns for folder selection. (Ran before exclude pattern)","scope":"resource"},"C_Cpp_Runner.excludeSearch":{"type":"array","default":["**/build","**/build/**","**/.*","**/.*/**","**/.vscode","**/.vscode/**"],"items":{"type":"string"},"description":"Exclude glob patterns for folder selection. (Ran after include pattern)","scope":"resource"},"C_Cpp_Runner.useAddressSanitizer":{"type":"boolean","default":false,"description":"Whether to activate the address sanitizer in debug builds.","scope":"resource"},"C_Cpp_Runner.useUndefinedSanitizer":{"type":"boolean","default":false,"description":"Whether to activate the undefined sanitizer in debug builds.","scope":"resource"},"C_Cpp_Runner.useLeakSanitizer":{"type":"boolean","default":false,"description":"Whether to activate the leak sanitizer in debug builds.","scope":"resource"},"C_Cpp_Runner.showCompilationTime":{"type":"boolean","default":true,"description":"Whether to output the compilation time statistics.","scope":"resource"},"C_Cpp_Runner.useLinkTimeOptimization":{"type":"boolean","default":false,"description":"Whether to use LTO/IPO in release builds.","scope":"resource"},"C_Cpp_Runner.msvcSecureNoWarnings":{"type":"boolean","default":false,"description":"Whether to disable security warnings in MSVC builds. (Functions like scanf etc.)","scope":"resource"}}}},"scripts":{"webpack":"webpack --mode development","webpack-watch":"webpack --mode development --watch","vscode:prepublish":"npm run webpack","compile":"npm run webpack","compile-watch":"npm run webpack-watch","watch":"tsc -watch -p ./"},"devDependencies":{"@types/minimatch":"^3.0.5","@types/node":"^14.0.27","@types/vscode":"^1.53.0","@typescript-eslint/eslint-plugin":"^4.1.1","@typescript-eslint/eslint-plugin-tslint":"^4.20.0","@typescript-eslint/parser":"^4.1.1","eslint":"^7.9.0","eslint-plugin-import":"^2.22.1","eslint-plugin-jsdoc":"^32.3.0","prettier":"^2.2.1","typescript":"^4.0.2","webpack":"^5.28.0","webpack-cli":"^4.10.0"},"dependencies":{"json5":"^2.2.0","lookpath":"^1.2.0","minimatch":"^3.0.4","ts-loader":"^8.1.0","vsce":"^2.15.0"},"extensionDependencies":["vadimcn.vscode-lldb"]},"location":{"$mid":1,"path":"/home/lauri/.vscode-oss/extensions/franneck94.c-cpp-runner-9.4.7-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"franneck94","metadata":{"installedTimestamp":1731075934865,"pinned":false,"source":"gallery","id":"0f4eac03-b4ec-4a55-bce1-deb41fde32ab","publisherId":"2b38f774-03da-4fb7-abaf-18e025753ee5","publisherDisplayName":"franneck94","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"franneck94.vscode-c-cpp-dev-extension-pack","uuid":"a5d8fcbb-073c-49c3-8272-30f78502b5b8"},"manifest":{"name":"vscode-c-cpp-dev-extension-pack","displayName":"C/C++ Extension Pack","description":"Popular VSCode Extensions for C/C++","version":"0.10.0","publisher":"franneck94","engines":{"vscode":"^1.72.0"},"icon":"icon.png","galleryBanner":{"color":"#222222","theme":"dark"},"keywords":["c","c++","cpp","extension pack"],"categories":["Extension Packs"],"repository":{"url":"https://github.com/franneck94/vscode-c-cpp-extension-pack"},"homepage":"https://github.com/franneck94/vscode-c-cpp-extension-pack","bugs":{"url":"https://github.com/franneck94/vscode-c-cpp-extension-pack/issues"},"extensionPack":["franneck94.c-cpp-runner","franneck94.vscode-c-cpp-config","twxs.cmake","bbenoist.doxygen","cschlosser.doxdocgen","vadimcn.vscode-lldb","jeff-hykin.better-cpp-syntax","13xforever.language-x86-64-assembly","cheshirekow.cmake-format"]},"location":{"$mid":1,"path":"/home/lauri/.vscode-oss/extensions/franneck94.vscode-c-cpp-dev-extension-pack-0.10.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"franneck94","metadata":{"installedTimestamp":1731075934864,"pinned":false,"source":"gallery","id":"a5d8fcbb-073c-49c3-8272-30f78502b5b8","publisherId":"2b38f774-03da-4fb7-abaf-18e025753ee5","publisherDisplayName":"franneck94","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"13xforever.language-x86-64-assembly","uuid":"7c8fcf53-a602-48d2-afdf-9c1318472604"},"manifest":{"name":"language-x86-64-assembly","displayName":"x86 and x86_64 Assembly","description":"Cutting edge x86 and x86_64 assembly syntax highlighting","version":"3.1.4","preview":false,"icon":"logo.png","engines":{"vscode":"^1.0.0"},"author":{"name":"Ilya Veselov"},"publisher":"13xforever","contributes":{"languages":[{"id":"asm-intel-x86-generic","aliases":["x86 and x86_64 Assembly","asm-intel-x86-generic"],"extensions":[".asm",".nasm",".yasm",".inc",".s"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"asm-intel-x86-generic","scopeName":"source.asm.x86_64","path":"./syntaxes/language-x86_64-assembly.tmLanguage"}]},"categories":["Programming Languages"],"repository":{"url":"https://github.com/13xforever/x86_64-assembly-vscode","type":"git"}},"location":{"$mid":1,"path":"/home/lauri/.vscode-oss/extensions/13xforever.language-x86-64-assembly-3.1.4-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"13xforever","metadata":{"installedTimestamp":1731075934865,"pinned":false,"source":"gallery","id":"7c8fcf53-a602-48d2-afdf-9c1318472604","publisherId":"1e9b49a6-88ea-4661-8c1b-c7a713cebd78","publisherDisplayName":"13xforever","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"bbenoist.doxygen","uuid":"aab644b7-f446-4774-87fc-2cce8f0d5a4f"},"manifest":{"name":"Doxygen","description":"Doxygen language support for Visual Studio Code","version":"1.0.0","publisher":"bbenoist","icon":"images/icon.png","galleryBanner":{"color":"#244FA7","theme":"dark"},"license":"SEE LICENSE IN LICENSE.md","bugs":{"url":"https://github.com/bbenoist/vscode-doxygen/issues"},"homepage":"https://github.com/bbenoist/vscode-doxygen/blob/master/README.md","repository":{"type":"git","url":"https://github.com/bbenoist/vscode-doxygen.git"},"engines":{"vscode":"^0.10.1"},"categories":["Languages"],"contributes":{"languages":[{"id":"doxygen","extensions":[".dox"],"configuration":"./doxygen.configuration.json"}],"grammars":[{"language":"doxygen","scopeName":"source.doxygen","path":"./syntaxes/doxygen.tmLanguage"}]}},"location":{"$mid":1,"path":"/home/lauri/.vscode-oss/extensions/bbenoist.doxygen-1.0.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"bbenoist","metadata":{"installedTimestamp":1731075934864,"pinned":false,"source":"gallery","id":"aab644b7-f446-4774-87fc-2cce8f0d5a4f","publisherId":"787ce942-60d4-48d6-b14e-25bdc72bd145","publisherDisplayName":"bbenoist","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"vadimcn.vscode-lldb","uuid":"bee31e34-a44b-4a76-9ec2-e9fd1439a0f6"},"manifest":{"name":"vscode-lldb","displayName":"CodeLLDB","version":"1.11.1","publisher":"vadimcn","description":"A native debugger powered by LLDB.  Debug C++, Rust and other compiled languages.","license":"MIT","author":{"name":"vadimcn"},"icon":"images/lldb.png","categories":["Debuggers"],"keywords":["C++","Rust","Reverse","Embedded","Debugger"],"private":true,"repository":{"type":"git","url":"https://github.com/vadimcn/codelldb.git"},"bugs":{"url":"https://github.com/vadimcn/codelldb/issues"},"qna":"https://github.com/vadimcn/codelldb/discussions","engines":{"vscode":"^1.61.0"},"dependencies":{"string-argv":"^0.3.2","yaml":"^1.10.0","yauzl":"^3.1.3"},"devDependencies":{"@types/vscode":"^1.60.0","@types/node":"^14.0.0","@types/mocha":"^10.0.0","@types/yauzl":"^2.10.3","@vscode/debugprotocol":"^1.53.0","@vscode/debugadapter-testsupport":"^1.51.0","typescript":"^4.7.0","mocha":"^10.8.1","source-map-support":"^0.5.12","mocha-suppress-logs":"^0.3.1","vsce":"^2.8.0","webpack":"^5.37.1","webpack-cli":"^4.7.0","ts-loader":"^8.0.0","json-pointer":"^0.6.2"},"scripts":{"vsce":"vsce","mocha":"mocha","tsc":"tsc","webpack":"webpack"},"main":"extension.js","activationEvents":["onDebug","onUri","onStartupFinished","onCommand:lldb.attach","onCommand:lldb.commandPrompt"],"contributes":{"commands":[{"category":"LLDB","title":"Display Format...","command":"lldb.displayFormat"},{"category":"LLDB","title":"Show Disassembly...","command":"lldb.showDisassembly"},{"category":"LLDB","title":"Toggle Disassembly","command":"lldb.toggleDisassembly"},{"category":"LLDB","title":"Toggle Pointee Summaries","command":"lldb.toggleDerefPointers"},{"category":"LLDB","title":"Toggle Debug Console Mode","command":"lldb.toggleConsoleMode"},{"category":"LLDB","title":"Run Diagnostics","command":"lldb.diagnose"},{"category":"LLDB","title":"Generate Launch Configurations from Cargo.toml","command":"lldb.getCargoLaunchConfigs"},{"category":"LLDB","title":"Display Options...","command":"lldb.changeDisplaySettings"},{"category":"LLDB","title":"Copy Value","command":"lldb.modules.copyValue"},{"category":"LLDB","title":"Use Alternate Backend...","command":"lldb.alternateBackend"},{"category":"LLDB","title":"Attach to Process...","command":"lldb.attach"},{"category":"LLDB","title":"Command Prompt","command":"lldb.commandPrompt"},{"category":"LLDB","title":"Search Symbols...","command":"lldb.symbols","enablement":"debugType == 'lldb'"},{"category":"LLDB","title":"View Memory...","command":"lldb.viewMemory","enablement":"debugType == 'lldb'"},{"category":"LLDB","title":"Exclude Caller","command":"lldb.excludedCallers.add","enablement":"debugType == 'lldb' && focusedView == 'workbench.debug.callStackView'"},{"category":"LLDB","title":"Remove Caller Exclusion","command":"lldb.excludedCallers.remove","icon":"$(close)"},{"category":"LLDB","title":"Remove All Caller Exclusions","command":"lldb.excludedCallers.removeAll","icon":"$(clear-all)"}],"languages":[{"id":"lldb.disassembly","aliases":["Disassembly"],"extensions":[".disasm"]}],"grammars":[{"language":"lldb.disassembly","scopeName":"source.disassembly","path":"./syntaxes/disassembly.json"}],"views":{"debug":[{"id":"lldb.loadedModules","name":"Modules","when":"debugType == 'lldb'"},{"id":"lldb.excludedCallers","name":"Excluded Callers","when":"debugType == 'lldb'"}]},"menus":{"commandPalette":[{"command":"lldb.modules.copyValue","when":"viewItem == lldb.moduleProperty"}],"debug/callstack/context":[{"command":"lldb.excludedCallers.add","when":"debugType == 'lldb'"}],"view/title":[{"command":"lldb.excludedCallers.removeAll","when":"view == 'lldb.excludedCallers'","group":"navigation"}],"view/item/context":[{"command":"lldb.modules.copyValue","when":"viewItem == lldb.moduleProperty"},{"command":"lldb.excludedCallers.remove","when":"view == 'lldb.excludedCallers'","group":"inline"}]},"taskDefinitions":[{"type":"codelldb.cargo","properties":{"args":{"type":"array"},"env":{"type":"object"},"cwd":{"type":"string"},"filter":{"type":"object"}},"when":"false"}],"configuration":[{"title":"General","properties":{"lldb.consoleMode":{"description":"Controls whether the debug console input is by default treated as debugger commands or as expressions to evaluate.","type":"string","enum":["commands","evaluate","split"],"default":"commands","enumDescriptions":["Treat debug console input as debugger commands.  In order to evaluate an expression, prefix it with '?' (question mark).","Treat debug console input as expressions.  In order to execute a debugger command, prefix it with '`' (backtick).","(experimental) Use the debug console for warningevaluation of expressions, open a separate terminal for input of LLDB commands."],"scope":"resource","order":1},"lldb.evaluationTimeout":{"description":"Timeout for expression evaluation, in seconds.","type":"number","default":5,"scope":"resource","order":2},"lldb.displayFormat":{"description":"Default format for displayed variable values.","type":"string","enum":["auto","hex","decimal","binary"],"default":"auto","scope":"resource","order":3},"lldb.dereferencePointers":{"description":"Whether to show summaries of the pointees instead of numeric values of the pointers themselves.","type":"boolean","default":true,"scope":"resource","order":4},"lldb.showDisassembly":{"description":"When to show disassembly.","type":"string","enum":["auto","never","always"],"default":"auto","enumDescriptions":["Only when source is not available.","Never show.","Always show, even if source is available."],"scope":"resource","order":5},"lldb.suppressMissingSourceFiles":{"description":"Suppress VSCode's messages about missing source files (when debug info refers to files not available on the local machine).","type":"boolean","default":true,"scope":"resource","order":10},"lldb.dbgconfig":{"description":"Common user-defined settings that can be inserted into launch configurations using ${dbgconfig:name} syntax.","type":"object","patternProperties":{".*":{"type":["string","number","array","boolean","null"]}},"default":{},"scope":"resource","order":100},"lldb.script":{"description":"Settings for scripts running within the debugger context. These may be accessed via `debugger.get_config()`. The schema is free-form, except that the `lang` subtree is reserved for built-in language support helpers.","type":"object","default":{},"scope":"resource","order":100}}},{"title":"Launch configuration defaults","properties":{"lldb.launch.initCommands":{"markdownDescription":"Commands executed *before* initCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":1},"lldb.launch.preRunCommands":{"markdownDescription":"Commands executed *before* preRunCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":2},"lldb.launch.postRunCommands":{"markdownDescription":"Commands executed *before* postRunCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":3},"lldb.launch.preTerminateCommands":{"markdownDescription":"Commands executed *after* preTerminateCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":4},"lldb.launch.exitCommands":{"markdownDescription":"Commands executed *after* exitCommands in individual launch configurations.","type":"array","items":{"type":"string"},"scope":"resource","order":4},"lldb.launch.env":{"description":"Additional environment variables merged with 'env' individual launch configurations.","type":"object","patternProperties":{".*":{"type":"string"}},"scope":"resource","order":10},"lldb.launch.envFile":{"order":10,"description":"File to read the environment variables from.","type":"string"},"lldb.launch.cwd":{"description":"Default program working directory.","type":"string","scope":"resource","order":10},"lldb.launch.terminal":{"description":"Default terminal type.","type":"string","enum":["integrated","external","console"],"enumDescriptions":["Use integrated terminal in VSCode.","Use external terminal window.","Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."],"scope":"resource","order":10},"lldb.launch.stdio":{"description":"Default destination for stdio streams: null = send to debugger console or a terminal, \"<path>\" = attach to a file/tty/fifo.","type":["null","string","array","object"],"scope":"resource","order":10},"lldb.launch.expressions":{"description":"The default evaluator type used for expressions.","type":"string","enum":["simple","python","native"],"scope":"resource","order":10},"lldb.launch.sourceMap":{"description":"Additional entries that will be merged with 'sourceMap's of individual launch configurations.","type":"object","patternProperties":{".*":{"type":"string"}},"scope":"resource","order":10},"lldb.launch.breakpointMode":{"scope":"resource","order":10,"description":"Specifies how source breakpoints should be set.","type":"string","enum":["path","file"],"enumDescriptions":["Resolve locations using full source file path.","Resolve locations using file name only."]},"lldb.launch.sourceLanguages":{"description":"A list of source languages to enable language-specific features for.","type":"array","items":{"type":"string"},"scope":"resource","order":20},"lldb.launch.relativePathBase":{"description":"Default base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".","type":"string","scope":"resource","order":100},"lldb.launch.debugServer":{"description":"Debug server port.","type":["null","integer"],"defaultSnippets":[{"label":"Port 4711","body":4711}],"scope":"resource","order":999}}},{"title":"Advanced","properties":{"lldb.verboseLogging":{"description":"Turns on verbose logging.","type":"boolean","default":false,"scope":"resource","order":1},"lldb.rpcServer":{"description":"Start an RPC server that will accept debug configuration requests.","type":["object","null"],"default":null,"scope":"window","order":2},"lldb.library":{"markdownDescription":"Which LLDB library to use.\n\nThis can be either a file path (recommended) or a directory, in which case platform-specific heuristics will be used to locate the actual library file.","type":"string","scope":"resource","order":10},"lldb.cargo":{"markdownDescription":"Name of the command to invoke as Cargo.","type":"string","default":"cargo","scope":"resource","order":10},"lldb.adapterEnv":{"description":"Extra environment variables for the debug adapter.","type":"object","patternProperties":{".*":{"type":"string"}},"default":{},"scope":"resource","order":10},"lldb.reproducer":{"markdownDescription":"Enable capture of a [reproducer](https://lldb.llvm.org/design/reproducers.html).\nMay also contain a path of the directory to save the reproducer in.","type":["boolean","string"],"default":false,"scope":"resource","order":10},"lldb.terminalPromptClear":{"description":"A sequence of strings sent to the terminal in order to clear its command prompt.","type":"array","items":{"type":"string"},"default":null,"scope":"resource","order":10},"lldb.evaluateForHovers":{"description":"Enable value preview when cursor is hovering over a variable.","type":"boolean","default":true,"scope":"resource","order":10},"lldb.commandCompletions":{"description":"Enable command completions in debug console.","type":"boolean","default":true,"scope":"resource","order":10},"lldb.suppressUpdateNotifications":{"description":"Don't show extension update notifications.","type":"boolean","scope":"application","order":100}}}],"breakpoints":[{"language":"ada"},{"language":"arm"},{"language":"arm64"},{"language":"asm"},{"language":"c"},{"language":"cpp"},{"language":"crystal"},{"language":"d"},{"language":"fortran"},{"language":"fortran-modern"},{"language":"haskell"},{"language":"jai"},{"language":"java"},{"language":"julia"},{"language":"kotlin"},{"language":"lldb.disassembly"},{"language":"nim"},{"language":"objective-c"},{"language":"objective-cpp"},{"language":"objectpascal"},{"language":"ocaml"},{"language":"odin"},{"language":"opencl"},{"language":"pascal"},{"language":"rust"},{"language":"swift"},{"language":"zig"}],"debuggers":[{"type":"lldb","label":"LLDB","languages":["ada","arm","arm64","asm","c","cpp","crystal","fortran-modern","fortran","jai","nim","objective-c","objective-cpp","objectpascal","odin","pascal","rust"],"variables":{"pickProcess":"lldb.pickProcess","pickMyProcess":"lldb.pickMyProcess"},"configurationAttributes":{"launch":{"properties":{"program":{"description":"Path to the program to debug.","type":"string"},"cargo":{"description":"Cargo invocation parameters.","type":"object","properties":{"args":{"description":"Cargo command line arguments.","type":"array","default":[]},"env":{"description":"Additional environment variables passed to Cargo.","type":"object","patternProperties":{".*":{"type":"string"}},"default":{}},"cwd":{"description":"Cargo working directory.","type":"string"},"problemMatcher":{"description":"Problem matcher(s) to apply to Cargo output.","type":["string","array"]},"filter":{"description":"Filter applied to compilation artifacts.","type":"object","properties":{"name":{"type":"string"},"kind":{"type":"string"}}}},"required":["args"],"additionalProperties":false,"defaultSnippets":[{"label":"Library unit tests","body":{"args":["test","--no-run","--lib"],"filter":{"kind":"lib"}}},{"label":"Executable","body":{"args":["build","--bin=${1:<name>}"],"filter":{"kind":"bin"}}}]},"args":{"description":"Program arguments.","type":["array","string"]},"cwd":{"description":"Program working directory.","type":"string"},"env":{"description":"Additional environment variables.","type":"object","patternProperties":{".*":{"type":"string"}}},"envFile":{"description":"File to read the environment variables from.","type":"string"},"stdio":{"description":"Destination for stdio streams: null = send to debugger console or a terminal, \"<path>\" = attach to a file/tty/fifo.","type":["null","string","array","object"],"default":null},"terminal":{"description":"Terminal type to use.","type":"string","enum":["integrated","external","console"],"enumDescriptions":["Use integrated terminal in VSCode.","Use external terminal window.","Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."],"default":"integrated"},"console":{"description":"Terminal type to use. (This setting is a compatibility alias of 'terminal'.)","type":"string","enum":["integratedTerminal","externalTerminal","internalConsole"],"enumDescriptions":["Use integrated terminal in VSCode.","Use external terminal window.","Use VScode Debug Console for stdout and stderr. Stdin will be unavailable."]},"stopOnEntry":{"description":"Automatically stop debuggee after launch.","type":"boolean","default":false},"initCommands":{"description":"Initialization commands executed upon debugger startup.","type":"array","items":{"type":"string"},"default":[]},"targetCreateCommands":{"description":"Commands that create the debug target.","type":"array","items":{"type":"string"},"default":[]},"preRunCommands":{"description":"Commands executed just before the program is launched.","type":"array","items":{"type":"string"},"default":[]},"processCreateCommands":{"description":"Commands that create the debuggee process.","type":"array","items":{"type":"string"},"default":[]},"postRunCommands":{"description":"Commands executed just after the program has been launched.","type":"array","items":{"type":"string"},"default":[]},"preTerminateCommands":{"description":"Commands executed just before the debuggee is terminated or disconnected from.","type":"array","items":{"type":"string"},"default":[]},"exitCommands":{"description":"Commands executed at the end of debugging session.","type":"array","items":{"type":"string"},"default":[]},"expressions":{"description":"The default evaluator type used for expressions.","type":"string","enum":["simple","python","native"]},"sourceMap":{"description":"Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.","type":"object","patternProperties":{".*":{"type":["string","null"]}},"default":{}},"relativePathBase":{"description":"Base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".","type":"string"},"sourceLanguages":{"description":"A list of source languages to enable language-specific features for.","type":"array","default":[]},"reverseDebugging":{"description":"Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).","type":"boolean","default":false},"breakpointMode":{"description":"Specifies how source breakpoints should be set.","type":"string","enum":["path","file"],"enumDescriptions":["Resolve locations using full source file path.","Resolve locations using file name only."]}},"oneOf":[{"required":["program"]},{"required":["cargo"]}]},"attach":{"properties":{"program":{"description":"Path to the program to attach to.","type":"string"},"pid":{"description":"Process id to attach to.","type":["integer","string"],"default":"${command:pickMyProcess}"},"stopOnEntry":{"description":"Automatically stop debuggee after attach.","type":"boolean","default":false},"waitFor":{"description":"Wait for the process to launch (MacOS only).","type":"boolean","default":false},"initCommands":{"description":"Initialization commands executed upon debugger startup.","type":"array","items":{"type":"string"},"default":[]},"targetCreateCommands":{"description":"Commands that create the debug target.","type":"array","items":{"type":"string"},"default":[]},"preRunCommands":{"description":"Commands executed just before the program is launched.","type":"array","items":{"type":"string"},"default":[]},"processCreateCommands":{"description":"Commands that create the debuggee process.","type":"array","items":{"type":"string"},"default":[]},"postRunCommands":{"description":"Commands executed just after the program has been launched.","type":"array","items":{"type":"string"},"default":[]},"exitCommands":{"description":"Commands executed at the end of debugging session.","type":"array","items":{"type":"string"},"default":[]},"expressions":{"description":"The default evaluator type used for expressions.","type":"string","enum":["simple","python","native"]},"sourceMap":{"description":"Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.","type":"object","patternProperties":{".*":{"type":["string","null"]}},"default":{}},"relativePathBase":{"description":"Base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".","type":"string"},"sourceLanguages":{"description":"A list of source languages to enable language-specific features for.","type":"array","default":[]},"reverseDebugging":{"description":"Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).","type":"boolean","default":false},"breakpointMode":{"description":"Specifies how source breakpoints should be set.","type":"string","enum":["path","file"],"enumDescriptions":["Resolve locations using full source file path.","Resolve locations using file name only."]}}},"custom":{"properties":{"initCommands":{"description":"Initialization commands executed upon debugger startup.","type":"array","items":{"type":"string"},"default":[]},"cargo":{"description":"Cargo invocation parameters.","type":"object","properties":{"args":{"description":"Cargo command line arguments.","type":"array","default":[]},"env":{"description":"Additional environment variables passed to Cargo.","type":"object","patternProperties":{".*":{"type":"string"}},"default":{}},"cwd":{"description":"Cargo working directory.","type":"string"},"problemMatcher":{"description":"Problem matcher(s) to apply to Cargo output.","type":["string","array"]},"filter":{"description":"Filter applied to compilation artifacts.","type":"object","properties":{"name":{"type":"string"},"kind":{"type":"string"}}}},"required":["args"],"additionalProperties":false,"defaultSnippets":[{"label":"Library unit tests","body":{"args":["test","--no-run","--lib"],"filter":{"kind":"lib"}}},{"label":"Executable","body":{"args":["build","--bin=${1:<name>}"],"filter":{"kind":"bin"}}}]},"targetCreateCommands":{"description":"Commands that create the debug target.","type":"array","items":{"type":"string"},"default":[]},"processCreateCommands":{"description":"Commands that create the debuggee process.","type":"array","items":{"type":"string"},"default":[]},"exitCommands":{"description":"Commands executed at the end of debugging session.","type":"array","items":{"type":"string"},"default":[]},"expressions":{"description":"The default evaluator type used for expressions.","type":"string","enum":["simple","python","native"]},"sourceMap":{"description":"Source path remapping between the build machine and the local machine.  Each item is a pair of remote and local path prefixes.","type":"object","patternProperties":{".*":{"type":["string","null"]}},"default":{}},"relativePathBase":{"description":"Base directory used for resolution of relative source paths.  Defaults to \"${workspaceFolder}\".","type":"string"},"sourceLanguages":{"description":"A list of source languages to enable language-specific features for.","type":"array","default":[]},"reverseDebugging":{"description":"Enable reverse debugging (Requires reverse execution support in the debug server, see User's Manual for details).","type":"boolean","default":false},"breakpointMode":{"description":"Specifies how source breakpoints should be set.","type":"string","enum":["path","file"],"enumDescriptions":["Resolve locations using full source file path.","Resolve locations using file name only."]}}}},"configurationSnippets":[{"label":"CodeLLDB: Launch","description":"Launch a new instance of the specified program.","body":{"type":"lldb","request":"launch","name":"${2:Launch}","program":"^\"\\${workspaceFolder}/${1:<program>}\"","args":[],"cwd":"^\"\\${workspaceFolder}\""}},{"label":"CodeLLDB: Attach to PID","description":"Attach to a running process with the specified process id.","body":{"type":"lldb","request":"attach","name":"${2:Attach}","pid":"^\"\\${command:pickMyProcess}\" // use \\${command:pickProcess} to pick other users' processes"}},{"label":"CodeLLDB: Attach by Name","description":"Attach to a running instance of the specified program.","body":{"type":"lldb","request":"attach","name":"${2:Attach}","program":"^\"\\${workspaceFolder}/${1:<program>}\""}},{"label":"CodeLLDB: Custom","description":"Launch or attach using raw LLDB commands.","body":{"type":"lldb","request":"custom","name":"${2:Custom launch}","targetCreateCommands":["^\"target create \\${workspaceFolder}/${1:<program>}\""],"processCreateCommands":["settings set target.run-args ${3:value1 value2 value3}","process launch"]}},{"label":"CodeLLDB: Debug a Cargo Target","description":"Debug an executable target in a Cargo package.","body":{"type":"lldb","request":"launch","name":"${2:Cargo launch}","cargo":{"args":["build","${1:--lib}"]},"args":[]}},{"label":"CodeLLDB: Debug Cargo Tests","description":"Debug unit tests in a Cargo package.","body":{"type":"lldb","request":"launch","name":"${2:Cargo test}","cargo":{"args":["test","--no-run","${1:--lib}"]},"args":[]}}]}]},"config":{"platformPackages":{"url":"https://github.com/vadimcn/codelldb/releases/download/v${version}/${platformPackage}","platforms":{"linux-x64":"codelldb-linux-x64.vsix","linux-arm64":"codelldb-linux-arm64.vsix","linux-arm":"codelldb-linux-armhf.vsix","darwin-x64":"codelldb-darwin-x64.vsix","darwin-arm64":"codelldb-darwin-arm64.vsix","win32-x64":"codelldb-win32-x64.vsix","win32-ia32":"codelldb-win32-x64.vsix"}}}},"location":{"$mid":1,"path":"/home/lauri/.vscode-oss/extensions/vadimcn.vscode-lldb-1.11.1-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"vadimcn","metadata":{"installedTimestamp":1731075934865,"pinned":false,"source":"gallery","id":"bee31e34-a44b-4a76-9ec2-e9fd1439a0f6","publisherId":"3b05d186-6311-4caa-99b5-09032a9d3cf5","publisherDisplayName":"vadimcn","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"cheshirekow.cmake-format","uuid":"5338f4d8-048c-433f-bce4-44aa922cedc2"},"manifest":{"name":"cmake-format","displayName":"cmake-format","description":"Format listfiles so they don't look like crap","version":"0.6.13","publisher":"cheshirekow","repository":"https://github.com/cheshirekow/cmakelang","icon":"images/cmake-format-logo.png","license":"GPL-3.0-or-later","engines":{"vscode":"^1.23.0"},"categories":["Other"],"activationEvents":["onLanguage:cmake"],"main":"./out/extension","contributes":{"languages":[{"id":"cmake","aliases":["cmake","cmake-listfile"],"extensions":["cmake"]}],"configuration":{"type":"object","title":"cmake-format","properties":{"cmakeFormat.cwd":{"type":["string","null"],"default":null,"description":"Working directory for cmake-format. Default will be the workspace root for the active document."},"cmakeFormat.env":{"type":["object","null"],"default":null,"description":"Environment used when subprocessing cmake-format. Set PYTHONPATH or PATH here as needed."},"cmakeFormat.mergeEnv":{"type":"boolean","default":true,"description":"Set to false to use the cmakeFormat.env environment verbatim, set to true to merge it with the existing environment."},"cmakeFormat.exePath":{"type":"string","default":"cmake-format","description":"Full path cmake-format entry point script or binary"},"cmakeFormat.args":{"type":"array","items":{"type":"string"},"default":[],"description":"Additional arguments to pass to cmake-format. Specify, e.g. --config-file here."}}}},"scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test"},"devDependencies":{"@types/mocha":"^2.2.42","@types/node":"^8.10.25","tslint":"^5.8.0","typescript":"^3.5.1","vscode":"^1.1.36","vsce":"^1.73.0"}},"location":{"$mid":1,"path":"/home/lauri/.vscode-oss/extensions/cheshirekow.cmake-format-0.6.13-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"cheshirekow","metadata":{"installedTimestamp":1731075934864,"pinned":false,"source":"gallery","id":"5338f4d8-048c-433f-bce4-44aa922cedc2","publisherId":"0baaec0f-9c29-4f95-97ba-d5b6f023bcd2","publisherDisplayName":"cheshirekow","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"franneck94.vscode-c-cpp-config","uuid":"903d2817-890f-4412-ac1d-a23ea84d76e1"},"manifest":{"name":"vscode-c-cpp-config","displayName":"C/C++ Config","description":"Creates important config files for C/C++ projects.","version":"6.0.0","publisher":"franneck94","license":"MIT","icon":"icon.png","galleryBanner":{"color":"#9c9c9c","theme":"dark"},"engines":{"vscode":"^1.86.0"},"categories":["Programming Languages","Snippets"],"tags":["c","c++","configuration"],"repository":{"type":"git","url":"https://github.com/franneck94/vscode-c-cpp-config.git"},"homepage":"https://github.com/franneck94/vscode-c-cpp-config/README.md","bugs":{"url":"https://github.com/franneck94/vscode-c-cpp-config/issues"},"activationEvents":["onStartupFinished"],"main":"./dist/main","contributes":{"taskDefinitions":[{"type":"C_Cpp_Config"}],"commands":[{"command":"C_Cpp_Config.generateConfigC","title":"Generate C Config Files","category":"C/C++ Config"},{"command":"C_Cpp_Config.generateConfigCpp","title":"Generate C++ Config Files","category":"C/C++ Config"}],"configuration":{"type":"object","title":"C/C++ Config","properties":{"C_Cpp_Config.lineLength":{"type":"integer","default":120,"description":"The max line length for the tools.","scope":"machine"},"C_Cpp_Config.aggressiveSettings":{"type":"boolean","default":false,"description":"If auto formatting should be turned on.","scope":"machine"}}}},"scripts":{"webpack":"webpack --mode development","webpack-watch":"webpack --mode development --watch","vscode:prepublish":"npm run webpack","compile":"npm run webpack","compile-watch":"npm run webpack-watch","watch":"tsc -watch -p ./","lint":"eslint src --ext ts"},"devDependencies":{"@types/glob":">=8.1.0","@types/node":">=18.15.3","@types/vscode":">=1.76.0","@typescript-eslint/eslint-plugin":">=5.55.0","@typescript-eslint/eslint-plugin-tslint":">=5.55.0","@typescript-eslint/parser":">=5.55.0","eslint":">=8.36.0","eslint-plugin-import":">=2.27.5","eslint-plugin-jsdoc":">=40.0.3","glob":">=9.3.0","prettier":">=2.8.4","typescript":">=5.0.2","webpack":">=5.76.2","webpack-cli":">=5.0.1"},"dependencies":{"json5":"^2.2.0","ts-loader":"^9.4.2","tslint":"^6.1.3","vsce":"^2.15.0"},"extensionDependencies":["vadimcn.vscode-lldb"]},"location":{"$mid":1,"path":"/home/lauri/.vscode-oss/extensions/franneck94.vscode-c-cpp-config-6.0.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"franneck94","metadata":{"installedTimestamp":1731075934865,"pinned":false,"source":"gallery","id":"903d2817-890f-4412-ac1d-a23ea84d76e1","publisherId":"2b38f774-03da-4fb7-abaf-18e025753ee5","publisherDisplayName":"franneck94","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"jeff-hykin.better-cpp-syntax","uuid":"73767f91-7dcb-43cb-90b3-596d073eea1f"},"manifest":{"name":"better-cpp-syntax","displayName":"Better C++ Syntax","description":"The bleeding edge of the C++ syntax","version":"1.27.1","icon":"icon.png","scripts":{},"keywords":["C++","cpp","syntax","textmate","highlighting","coloring","color"],"engines":{"vscode":"^1.0.0"},"author":{"name":"Jeff Hykin"},"publisher":"jeff-hykin","categories":["Programming Languages"],"repository":{"url":"https://github.com/jeff-hykin/better-cpp-syntax","type":"git"},"contributes":{"grammars":[{"language":"cpp","scopeName":"source.cpp.embedded.macro","path":"./autogenerated/cpp.embedded.macro.tmLanguage.json","embeddedLanguages":{"meta.embedded.assembly.cpp":"asm"}},{"language":"cpp","scopeName":"source.cpp","path":"./autogenerated/cpp.tmLanguage.json","embeddedLanguages":{"meta.embedded.assembly.cpp":"asm","meta.preprocessor.macro.contents":"cpp"}}]},"devDependencies":{"chalk":"^2.4.2","dictionary-en-us":"^2.1.1","lodash":"^4.17.19","nspell":"^2.1.2","oniguruma":"^7.2.0","ovsx":"^0.5.1","textmate-bailout":"^1.1.0","textmate-tester":"^1.1.9","vsce":"^1.103.1"}},"location":{"$mid":1,"path":"/home/lauri/.vscode-oss/extensions/jeff-hykin.better-cpp-syntax-1.27.1-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"jeff-hykin","metadata":{"installedTimestamp":1731075934864,"pinned":false,"source":"gallery","id":"73767f91-7dcb-43cb-90b3-596d073eea1f","publisherId":"b734936b-6cc4-40c1-b17a-c6a7e1f680cd","publisherDisplayName":"jeff-hykin","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]},{"type":1,"identifier":{"id":"cschlosser.doxdocgen","uuid":"da7e26d5-d57c-4742-ab47-d77fb189e195"},"manifest":{"name":"doxdocgen","displayName":"Doxygen Documentation Generator","description":"Let me generate Doxygen documentation from your source code for you.","version":"1.4.0","publisher":"cschlosser","engines":{"vscode":"^1.55.0"},"categories":["Other"],"badges":[{"url":"https://img.shields.io/github/workflow/status/cschlosser/doxdocgen/CI/master","href":"https://github.com/cschlosser/doxdocgen/actions/workflows/ci.yml?query=branch%3Amaster+","description":"Continous integration"},{"url":"https://img.shields.io/github/workflow/status/cschlosser/doxdocgen/CD?label=Release","href":"https://github.com/cschlosser/doxdocgen/actions/workflows/cd.yml?query=event%3Arelease++","description":"Release pipeline"},{"url":"https://codecov.io/gh/cschlosser/doxdocgen/branch/master/graph/badge.svg","href":"https://codecov.io/gh/cschlosser/doxdocgen","description":"Code coverage"}],"activationEvents":["onLanguage:cuda","onLanguage:cuda-cpp","onLanguage:cpp","onLanguage:c"],"contributes":{"configuration":{"type":"object","title":"Doxygen Documentation Generator Settings","properties":{"doxdocgen.c.triggerSequence":{"description":"Doxygen comment trigger. This character sequence triggers generation of Doxygen comments.","type":"string","default":"/**"},"doxdocgen.c.firstLine":{"description":"The first line of the comment that gets generated. If empty it won't get generated at all.","type":"string","default":"/**"},"doxdocgen.c.commentPrefix":{"description":"The prefix that is used for each comment line except for first and last.","type":"string","default":" * "},"doxdocgen.c.lastLine":{"description":"The last line of the comment that gets generated. If empty it won't get generated at all.","type":"string","default":" */"},"doxdocgen.c.setterText":{"description":"Smart text snippet for setters.","type":"string","default":"Set the {name} object"},"doxdocgen.c.getterText":{"description":"Smart text snippet for getters.","type":"string","default":"Get the {name} object"},"doxdocgen.c.factoryMethodText":{"description":"Smart text snippet for factory methods/functions.","type":"string","default":"Create a {name} object"},"doxdocgen.cpp.tparamTemplate":{"description":"The template of the template parameter Doxygen line(s) that are generated. If empty it won't get generated at all.","type":"string","default":"@tparam {param} "},"doxdocgen.cpp.ctorText":{"description":"Smart text snippet for constructors.","type":"string","default":"Construct a new {name} object"},"doxdocgen.cpp.dtorText":{"description":"Smart text snippet for destructors.","type":"string","default":"Destroy the {name} object"},"doxdocgen.file.fileTemplate":{"description":"The template for the file parameter in Doxygen.","type":"string","default":"@file {name}"},"doxdocgen.file.copyrightTag":{"markdownDescription":"File copyright documentation tag.  Array of strings will be converted to one line per element. Can template `{year}`.","type":["array","string"],"default":["@copyright Copyright (c) {year}"]},"doxdocgen.file.versionTag":{"description":"Version number for the file.","type":"string","default":"@version 0.1"},"doxdocgen.file.customTag":{"markdownDescription":"Additional file documentation.  Array of strings will be converted to one line per element. Can template `{year}`, `{date}`, `{author}`, `{email}` and `{file}`. You have to specify the prefix.","type":["array","string"],"default":[]},"doxdocgen.file.fileOrder":{"markdownDescription":"The order to use for the file comment. Values can be used multiple times. Valid values are `file`, `author`, `brief`, `version`, `date`, `empty`, `copyright` and `custom`.","type":["array","string"],"default":["file","author","brief","version","date","empty","copyright","empty","custom"]},"doxdocgen.generic.includeTypeAtReturn":{"description":"Whether include type information at return.","type":"boolean","default":true},"doxdocgen.generic.boolReturnsTrueFalse":{"markdownDescription":"If this is enabled, the documentation for a `bool` return value will be split into `true` and `false` entries.","type":"boolean","default":true},"doxdocgen.generic.briefTemplate":{"description":"The template of the brief Doxygen line that is generated. If empty it won't get generated at all.","type":"string","default":"@brief {text}"},"doxdocgen.generic.paramTemplate":{"description":"The template of the param Doxygen line(s) that are generated. If empty it won't get generated at all.","type":"string","default":"@param {param} "},"doxdocgen.generic.returnTemplate":{"description":"The template of the return Doxygen line that is generated. If empty it won't get generated at all.","type":"string","default":"@return {type} "},"doxdocgen.generic.linesToGet":{"description":"How many lines the plugin should look for to find the end of the declaration. Please be aware that setting this value too low could improve the speed of comment generation by a very slim margin but the plugin also may not correctly detect all declarations or definitions anymore.","type":"number","default":20},"doxdocgen.generic.authorName":{"markdownDescription":"Set the name of the author.  Replaces `{author}`.","type":"string","default":"your name"},"doxdocgen.generic.authorEmail":{"markdownDescription":"Set the e-mail address of the author.  Replaces `{email}`.","type":"string","default":"you@domain.com"},"doxdocgen.generic.authorTag":{"markdownDescription":"Set the style of the author tag and your name.  Can template `{author}` and `{email}`.","type":"string","default":"@author {author} ({email})"},"doxdocgen.generic.dateTemplate":{"description":"The template for the date parameter in Doxygen.","type":"string","default":"@date {date}"},"doxdocgen.generic.dateFormat":{"description":"The format to use for the date.","type":"string","default":"YYYY-MM-DD"},"doxdocgen.generic.generateSmartText":{"description":"Decide if you want to get smart text for certain commands.","type":"boolean","default":true},"doxdocgen.generic.splitCasingSmartText":{"markdownDescription":"Decide if the values put into `{name}` should be split according to their casing.","type":"boolean","default":true},"doxdocgen.generic.order":{"markdownDescription":"The order to use for the comment generation. Values can be used multiple times. Valid values are `brief`, `empty`, `tparam`, `param`, `return`, `custom`, `author`, `date`, `version` and `copyright`.","type":["array","string"],"default":["brief","empty","tparam","param","return","custom"]},"doxdocgen.generic.customTags":{"markdownDescription":"Custom tags to be added to the generic order. One tag per line will be added. Can template `{year}`, `{date}`, `{author}`, `{email}` and `{file}`. You have to specify the prefix.","type":["array","string"],"default":[]},"doxdocgen.generic.filteredKeywords":{"description":"Array of keywords that should be removed from the input prior to parsing.","type":"array","default":[]},"doxdocgen.generic.useGitUserName":{"markdownDescription":"Substitute `{author}` with `git config --get user.name`.","type":"boolean","default":false},"doxdocgen.generic.useGitUserEmail":{"markdownDescription":"Substitute `{email}` with `git config --get user.email`.","type":"boolean","default":false},"doxdocgen.generic.commandSuggestion":{"description":"Provide intellisense and snippet for doxygen commands","type":"boolean","default":true},"doxdocgen.generic.commandSuggestionAddPrefix":{"markdownDescription":"Add `\\` in doxygen command suggestion for better readbility (need to enable commandSuggestion)","type":"boolean","default":false}}}},"icon":"images/icon.png","keywords":["cpp","c++","c","Doxygen"],"license":"SEE LICENSE IN LICENSE","main":"./out/extension","repository":{"type":"git","url":"https://github.com/cschlosser/doxdocgen.git"},"bugs":{"url":"https://github.com/cschlosser/doxdocgen/labels/bug"},"scripts":{"vscode:prepublish":"yarn compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","test":"yarn compile && node ./out/test/runTests.js","cov":"yarn clean && nyc yarn test","lint":"tslint -c tslint.json 'src/**/*.ts'","clean":"rm -rf coverage .nyc_output out"},"dependencies":{"env-var":"^4.1.0","moment":"^2.20.1","opn":"^5.2.0","simple-git":"^2.38.0"},"devDependencies":{"@istanbuljs/nyc-config-typescript":"0.1.3","@types/mocha":"^5.2.7","@types/node":"12.7.1","@types/vscode":"^1.55.0","decache":"^4.5.1","glob":"^7.1.6","handlebars":"^4.7.3","minimist":">=1.2.2","mocha":"^9.1.3","nyc":"12.0.1","ovsx":"^0.3.0","remap-istanbul":"^0.13.0","source-map-support":"^0.5.19","ts-node":"^9.1.1","tslint":"^5.20.0","typescript":"^4.2.4","vsce":"^2.6.7","vscode-test":"^1.5.2","yargs-parser":">=13.1.2"}},"location":{"$mid":1,"path":"/home/lauri/.vscode-oss/extensions/cschlosser.doxdocgen-1.4.0-universal","scheme":"file"},"isBuiltin":false,"targetPlatform":"universal","publisherDisplayName":"cschlosser","metadata":{"installedTimestamp":1731075934864,"pinned":false,"source":"gallery","id":"da7e26d5-d57c-4742-ab47-d77fb189e195","publisherId":"45f11b45-124a-44bb-be40-51cea102eb70","publisherDisplayName":"cschlosser","targetPlatform":"universal","updated":false,"isPreReleaseVersion":false,"hasPreReleaseVersion":false},"isValid":true,"validations":[]}]}